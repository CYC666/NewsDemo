//
//  ExpenseRecordMerchantViewController.m
//  LFBaseFrameTwo
//
//  Created by admin on 16/12/26.
//  Copyright © 2016年 admin. All rights reserved.
//

#import "ExpenseRecordMerchantViewController.h"
#import <MJRefresh.h>
#import "AddExpenseRecordViewController.h"
#import "ExpenseRecord.h"
#import <UIImageView+WebCache.h>
#import "UIButton+addproty.h"

@interface ExpenseRecordMerchantViewController ()
{
    //用户信息单例
    UserInformation *userInfo;
    
    //工具方法单例
    SmallFunctionTool *smallFunc;
    
    
    //无数据时呈现的视图
    UIView *noDataView;
    
    //数据源
    NSMutableArray *rechargeRecordList;
    NSMutableArray *showRecordArray;
    
    //分页的页数
    NSInteger pageNum;
    
    // 个人累计消费
    NSString *totalText;
    
}
@end

@implementation ExpenseRecordMerchantViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    //初始化
    userInfo = [UserInformation sharedInstance];
    smallFunc = [SmallFunctionTool sharedInstance];
    rechargeRecordList = [NSMutableArray array];
    showRecordArray = [NSMutableArray array];
    pageNum=1;
    
    //导航栏标题
    self.navigationItem.title = @"个人消费";
    
    //添加导航栏左右按钮
    UIBarButtonItem *barBack = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"添加消费"] style:UIBarButtonItemStylePlain target:self action:@selector(addExpenseRecord:)];
    self.navigationItem.rightBarButtonItem = barBack;
    
    
    //添加表视图控制器的代理方法
    _tableViewRecord.delegate = self;
    _tableViewRecord.dataSource = self;
    _tableViewRecord.rowHeight=90.0f;
    
    //表视图去除下面多余的线
    _tableViewRecord.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
    
    
    //添加下拉刷新
    MJRefreshNormalHeader *header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        
//        //请求数据+刷新界面
//        [self refreshRecordData:NO];
//        
        //关闭刷新
        [_tableViewRecord.mj_header endRefreshing];
    }];
    header.stateLabel.font = [UIFont systemFontOfSize:12];
    header.lastUpdatedTimeLabel.font = [UIFont systemFontOfSize:11];
    _tableViewRecord.mj_header = header;
    
    
    //上拉刷新
    MJRefreshAutoNormalFooter *footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{
        
        //调用刷新方法
        [self refreshRecordData:YES];
        
        //关闭刷新
        [_tableViewRecord.mj_footer endRefreshing];
    }];
    footer.automaticallyHidden = YES;//自动根据有无数据来显示和隐藏
    footer.stateLabel.font = [UIFont systemFontOfSize:12];
    _tableViewRecord.mj_footer = footer;
    

}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    
    
    //请求数据+刷新界面
    [self refreshRecordData:NO];
}

-(void)viewDidDisappear:(BOOL)animated{
    
    [super viewDidDisappear:animated];
    
    //停止风火轮
    [smallFunc stopActivityIndicator:@"ExpenseRecordMerchantViewController"];
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


#pragma mark - 私有方法
//请求并刷新数据
- (void)refreshRecordData:(BOOL)isFooterRefresh {
    
    dispatch_async(dispatch_get_main_queue(), ^{
        //显示风火轮
        [smallFunc createActivityIndicator:self.view AndKey:@"ExpenseRecordMerchantViewController"];
    });
    
    if (! isFooterRefresh) { //是下拉刷新
        //下拉刷新或者点击分类刷新，都需要将分页数重新设置为1
        pageNum = 1;
        [showRecordArray removeAllObjects];
    } else { //是上拉刷新
        //为上拉刷新，需要使用累加的分页值
        pageNum++;
    }
    
    //分页数
    NSString *paraPageNum = [NSString stringWithFormat:@"%ld",(long)pageNum];
    
    
    NSString *method = [NSString stringWithFormat:@"GetPageUserConsumption"];
    NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                         @"商户",@"Action",                   // 获取类型（个人、商户、默认）
                         userInfo.UserId,@"UserId",          // 用户ID
                         @"0",@"Commission",                 // 获取所有消费
                         paraPageNum,@"PageIndex",
                         @"10",@"PageSize",
                         nil];
    
    [SOAPUrlSession SOAPDataWithMethod:method parameter:dic success:^(id responseObject) {
        
        NSDictionary *responseDic = responseObject;
        NSLog(@"GetPageUser %@ ----- %@",responseDic[@"Code"],responseDic[@"Message"]);
        
        //返回的Code字段：200-成功，300-失败，400-无数据，500-内部服务异常
        NSString *responseCode = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
        
        if ([responseCode isEqualToString:@"200"]) {
            //后台返回“发送成功”
            NSArray *dataArray = responseObject[@"Data"][@"rows"];
            
            // 个人累计消费
            totalText = [NSString stringWithFormat:@"%@", responseObject[@"Data"][@"saletotal"]];
            
            if (dataArray.count > 0) {
                
                //存储接口返回数据
                NSMutableArray *acquireArray = [NSMutableArray array];
                
                //将数据保存到数据源
                for (NSDictionary *dic in dataArray) {
                    
                    ExpenseRecord *oneRecord = [[ExpenseRecord alloc] initWithoperatevalue:dic[@"operatevalue"] createdate:dic[@"createdate"] headicon:dic[@"headicon"] nickname:dic[@"nickname"] realname:dic[@"realname"] commission:dic[@"commission"] paymentmark:dic[@"paymentmark"]consumptionid:dic[@"consumptionid"]];
                    
                    [acquireArray addObject:oneRecord];
                    
                }
                //初始化本地数据，（0-夺宝中，对应的商品列表）
                [rechargeRecordList removeAllObjects];
                rechargeRecordList = [acquireArray mutableCopy];
            } else {
                //展示无夺宝记录的404页面
                [rechargeRecordList removeAllObjects];
                NSLog(@"当前用户无收藏列表数据");
            }
            
            if (rechargeRecordList.count > 0) {
                //数据更新过后，才调用刷新方法
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    //停止风火轮
                    [smallFunc stopActivityIndicator:@"ExpenseRecordMerchantViewController"];
                    
                    //去掉无数据时的视图
                    if (noDataView) {
                        [noDataView removeFromSuperview];
                        noDataView = nil;
                    }
                    
                    //更新数据源
                    if (! isFooterRefresh) { //是下拉刷新
                        showRecordArray = [rechargeRecordList mutableCopy];
                    } else { //是上拉刷新
                        NSArray *resultArr = [rechargeRecordList copy];
                        [showRecordArray addObjectsFromArray:resultArr];
                    }
                    
                    // 更新UI
                    _labelCumulative.text =[SmallFunctionTool changeBigNumber:totalText];
                    [_tableViewRecord reloadData];
                    
                });
            }
        } else if ([responseCode isEqualToString:@"400"]){
            
            dispatch_async(dispatch_get_main_queue(), ^{
                //停止风火轮
                [smallFunc stopActivityIndicator:@"ExpenseRecordMerchantViewController"];
                [rechargeRecordList removeAllObjects];
            });
            
            if (showRecordArray.count> 0) {
                //数据更新过后，才调用刷新方法
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    //去掉无数据时的视图
                    if (noDataView) {
                        [noDataView removeFromSuperview];
                        noDataView = nil;
                    }
                    
                    FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                    [showMessage showAlertWithTwo:@"没有更多消费记录数据啦亲！"];
                    return ;
                    
                });
            }else {
                if (! noDataView) {
                    //显示无商品时的图片
                    dispatch_async(dispatch_get_main_queue(), ^{
                        noDataView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)];
                        noDataView.backgroundColor = [UIColor colorWithRed:245.0/255.0f green:245.0/255.0f blue:245.0/255.0f alpha:1.0f];
                        
                        //图标
                        UIImageView *noDataImage = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"暂无个人消费"]];
                        // CGRect imageFrame =CGRectMake(0, (SCREEN_HEIGHT-SCREEN_WIDTH)/2-20, SCREEN_WIDTH, (SCREEN_WIDTH)*(276.0/750.0));
                        noDataImage.center = CGPointMake(SCREEN_WIDTH/2.0, SCREEN_HEIGHT/2.0 - 150);
                        [noDataView addSubview:noDataImage];
                        [_tableViewRecord addSubview:noDataView];
                    });
                }
            }
            
        } else {
            dispatch_async(dispatch_get_main_queue(), ^{
                //停止风火轮
                [smallFunc stopActivityIndicator:@"ExpenseRecordMerchantViewController"];
                
                FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                [showMessage showAlertWithTwo:responseDic[@"Message"]];
            });
        }
    } failure:^(NSError *error) {
        
        
        dispatch_async(dispatch_get_main_queue(), ^{
            //停止风火轮
            [smallFunc stopActivityIndicator:@"ExpenseRecordMerchantViewController"];
            
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWithTwo:@"网络异常：连接服务器失败"];
        });
    }];
    
}

//添加个人消费记录
- (void)addExpenseRecord:(UIButton *)sender {

    //按钮0.3秒只可以点击1次
    [SmallFunctionTool singleClickButtonRestriction:sender];
    
    //跳转到添加界面
    AddExpenseRecordViewController *uploadPhotoVC =[[AddExpenseRecordViewController alloc]initWithNibName:@"AddExpenseRecordViewController" bundle:nil];
    [self.navigationController pushViewController:uploadPhotoVC animated:YES];

}



#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if (showRecordArray.count <= 0 || showRecordArray == nil) {
        return 0;
    } else {
        return showRecordArray.count;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"ExpenseMerchantCell" forIndexPath:indexPath];
    
    ExpenseRecord *oneRecord = showRecordArray[indexPath.row];
    
    UIImageView *imageHead = (UIImageView *)[cell viewWithTag:1000];
    UILabel *labelUserName = (UILabel *)[cell viewWithTag:1001];
    UILabel *labelDate = (UILabel *)[cell viewWithTag:1002];
    UILabel *labelMoney = (UILabel *)[cell viewWithTag:1003];
    UIButton *buttonDelete = (UIButton *)[cell viewWithTag:1004];
    UILabel *labeldakuan = (UILabel *)[cell viewWithTag:1009];
    
    if ([oneRecord.headicon isEqualToString:@""] || oneRecord.headicon == nil) {
        imageHead.image = [UIImage imageNamed:@"defaultHead"];
    } else {
        //设置网络url图片
        NSString *urlStr = [NSString stringWithFormat:@"%@%@",Java_Image_URL,oneRecord.headicon];
        NSURL *imageUrl = [NSURL URLWithString:urlStr];
        [imageHead sd_setImageWithURL:imageUrl placeholderImage:[UIImage imageNamed:@"defaultHead"] options:SDWebImageRetryFailed];
    }
    
//    //给真实姓名加密
//    NSString *string1 = [oneRecord.realname substringWithRange:NSMakeRange(oneRecord.realname.length-1,1)];
//    NSString *string2 = @"";
//    for (NSInteger i=1; i<oneRecord.realname.length; i++) {
//        string2 = [NSString stringWithFormat:@"%@*",string2];
//    }
//    labelUserName.text = [NSString stringWithFormat:@"%@%@",string2,string1];
    
    //真实姓名不加密
    labelUserName.text = oneRecord.realname;

    //时间(只留下年月日)
    labelDate.text = [oneRecord.createdate substringWithRange:NSMakeRange(0, 10)];
    
//    NSString *str2=[NSString stringWithFormat:@"+%@(让%@%%)",[SmallFunctionTool changeBigNumber:oneRecord.operatevalue],oneRecord.commission];
//    NSString *str =[NSString stringWithFormat:@"%@",oneRecord.commission];
//    NSString *str1 =[NSString stringWithFormat:@"+%@",[SmallFunctionTool changeBigNumber:oneRecord.operatevalue]];
//    NSMutableAttributedString *aStr = [[NSMutableAttributedString alloc]initWithString:str2];
//    [aStr addAttribute:NSForegroundColorAttributeName value:[UIColor colorWithRed:255/255.0 green:11.0/255.0 blue:35.0/255.0 alpha:1.0f] range:NSMakeRange(str1.length,str.length+4)];
//    
//    //金额
//    [labelMoney setText:str];
//    [labelMoney setAttributedText:aStr];
    labelMoney.text = [NSString stringWithFormat:@"+%@", [SmallFunctionTool changeBigNumber:oneRecord.operatevalue]];
    
    // 让利
    labeldakuan.text = [NSString stringWithFormat:@"让利:%@%%", oneRecord.commission];
    
    // 撤销
    [buttonDelete addTarget:self action:@selector(buttonDelete:) forControlEvents:UIControlEventTouchUpInside];
 
//    if ([oneRecord.paymentmark isEqualToString:@"0"]||[oneRecord.paymentmark isEqualToString:@"1"]) {
//        labeldakuan.text=@"未打款";
//        [buttonDelete.layer setMasksToBounds:YES];
//        [buttonDelete.layer setCornerRadius:8.0]; //设置矩形四个圆角半径
//        [buttonDelete.layer setBorderWidth:0.5]; //边框宽度
//        CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
//        
//        CGColorRef colorref = CGColorCreate(colorSpace,(CGFloat[]){ 7/255.0,105/255.0 , 209.0/255.0,1 });
//        [buttonDelete.layer setBorderColor:colorref];//边框颜色
//        
//         buttonDelete.enabled=YES;
//        [buttonDelete setTitleColor:Publie_Color forState:UIControlStateNormal];
//        [buttonDelete addTarget:self action:@selector(buttonDelete:) forControlEvents:UIControlEventTouchUpInside];
//        
//    }else if ([oneRecord.paymentmark isEqualToString:@"3"]){
//    
//        labeldakuan.text=@"已打款";
//        [buttonDelete.layer setMasksToBounds:YES];
//        [buttonDelete.layer setCornerRadius:8.0]; //设置矩形四个圆角半径
//        [buttonDelete.layer setBorderWidth:0.5]; //边框宽度
//        CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
//        
//        CGColorRef colorref = CGColorCreate(colorSpace,(CGFloat[]){ 150/255.0,150/255.0 , 150/255.0,1 });
//        [buttonDelete.layer setBorderColor:colorref];//边框颜色
//        [buttonDelete setTitleColor:[UIColor colorWithRed:150/255.0 green:150/255.0 blue:150/255.0 alpha:1.0f] forState:UIControlStateNormal];
//        buttonDelete.enabled=NO;
//    }
//    
//    buttonDelete.indexPathBut = indexPath;
    
    return cell;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}

-(void)buttonDelete:(UIButton *)sender {

    //弹窗提示
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"确定要撤单？" message:nil preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *cancelButton = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:nil];
    UIAlertAction *defaultButton = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        //获取点击的Cell的index
        ExpenseRecord *deleteAddr = showRecordArray[sender.indexPathBut.row];
        
        NSString *method = [NSString stringWithFormat:@"RevokedUserConsumption"];
        NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                             userInfo.UserId,@"UserId", //商户用户主键
                             deleteAddr.consumptionid,@"ConsumptionId", //消费主键编号
                             nil];
        
        //发送soap请求
        [SOAPUrlSession SOAPDataWithMethod:method parameter:dic success:^(id responseObject) {
            
            NSDictionary *responseDic = responseObject;
            NSLog(@"GetPageUser %@ ----- %@",responseDic[@"Code"],responseDic[@"Message"]);
            
            //返回的Code字段：200-成功，300-失败，400-无数据，500-内部服务异常
            NSString *responseCode = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
            
            if ([responseCode isEqualToString:@"200"]) {
                
                //tableView界面删除数据,删除表视图中对应的行
                dispatch_async(dispatch_get_main_queue(), ^{
//                   [_tableViewRecord deleteRowsAtIndexPaths:@[sender.indexPathBut] withRowAnimation:UITableViewRowAnimationLeft];
                    
                    //请求数据+刷新界面
                    [self refreshRecordData:NO];
                });
                
            } else {
                
                //根据后端定义的错误编码，返回不同的提示
                FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                [showMessage showAlertWith:responseDic[@"Message"]];
                
            }
        } failure:^(NSError *error) {
            //后台连接直接不成功，弹出“连接服务器失败”
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWith:@"网络异常：连接服务器失败"];
            
        }];
        
    }];
    
    //使用runtime属性，修改默认的系统提示窗的字体(只支持8.4以上版本)
    CGFloat iOSVersion = [[[UIDevice currentDevice] systemVersion] floatValue];
    if (iOSVersion >=8.4) {
        [cancelButton setValue:[UIColor darkGrayColor] forKey:@"_titleTextColor"];
        [defaultButton setValue:Publie_Color forKey:@"_titleTextColor"];
    }
    
    [alert addAction:cancelButton];
    [alert addAction:defaultButton];
    [self presentViewController:alert animated:YES completion:nil];
    
}

//tableview的下边线顶格
-(void)viewDidLayoutSubviews
{
    if ([_tableViewRecord respondsToSelector:@selector(setSeparatorInset:)]) {
        [_tableViewRecord setSeparatorInset:UIEdgeInsetsMake(0,0,0,0)];
    }
    
    if ([_tableViewRecord respondsToSelector:@selector(setLayoutMargins:)]) {
        [_tableViewRecord setLayoutMargins:UIEdgeInsetsMake(0,0,0,0)];
    }
}
-(void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) {
        [cell setSeparatorInset:UIEdgeInsetsZero];
    }
    
    if ([cell respondsToSelector:@selector(setLayoutMargins:)]) {
        [cell setLayoutMargins:UIEdgeInsetsZero];
    }
}




@end
