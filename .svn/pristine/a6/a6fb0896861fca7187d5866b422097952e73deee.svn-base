//
//  AddSurrenderViewController.m
//  LFBaseFrameTwo
//
//  Created by admin on 16/12/27.
//  Copyright © 2016年 admin. All rights reserved.
//

#import "AddSurrenderViewController.h"
#import "AddSurrenderView.h"
#import "PTXDatePickerView.h"
#import "SurrenderMainInfo.h"

@interface AddSurrenderViewController () <PTXDatePickerViewDelegate>
{
    //添加View
    AddSurrenderView *baseView;
    
    //蒙版所在的视图
    UIView *maskingOutView;
    
    NSMutableArray *rechargeRecordList;
}

@property (nonatomic, strong) PTXDatePickerView *datePickerView;

@property (nonatomic, strong) NSDate *selectedDate; //代表dateButton上显示的时间。

@end

@implementation AddSurrenderViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    
    //导航栏标题
    self.navigationItem.title = @"我要打款";
    rechargeRecordList = [NSMutableArray array];
    //创建xib并添加到基类的滑动视图上
    baseView = [AddSurrenderView viewFromNIB];
    baseView.frame = CGRectMake(0, 0, SCREEN_WIDTH, 510);
    //给VC添加滑动视图
    UIView *originalView = baseView;
    CGRect originalFrame = CGRectMake(0, 64.0, SCREEN_WIDTH, SCREEN_HEIGHT-64);
    [self addScrollViewForXib:originalView withFrame:originalFrame];
    
    //设置xib中的控件的操作
    [baseView.buttonAddSurrender addTarget:self action:@selector(submitAddRecord:) forControlEvents:UIControlEventTouchUpInside];
//    [baseView.dateButton addTarget:self action:@selector(selectDate) forControlEvents:UIControlEventTouchUpInside];
    
    
}

-(void)viewWillAppear:(BOOL)animated{

    [super viewWillAppear:animated];
    
    //baseView.textFaren.text=[NSString stringWithFormat:@"%@",self.userInfo.RealName];
    
    [self refreshRecordData];
}

- (void)viewDidAppear:(BOOL)animated {
    
    [super viewDidAppear:animated];
    
    //添加蒙版
    if (maskingOutView != nil) {
        maskingOutView = nil;
        [maskingOutView removeFromSuperview];
    }
    maskingOutView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)];
    maskingOutView.backgroundColor = [UIColor colorWithRed:153.0/255.0f green:149.0/255.0f blue:144.0/255.0f alpha:0.6f];
    [self.view.window addSubview:maskingOutView];
    
    
    //蒙版上的按钮，点击这隐藏蒙版
    UIButton *buttonClose = [UIButton buttonWithType:UIButtonTypeCustom];
    buttonClose.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
    [maskingOutView addSubview:buttonClose];
    [buttonClose addTarget:self action:@selector(pushDownSelectTableView) forControlEvents:UIControlEventTouchUpInside];
    
    //初始时隐藏蒙版
    maskingOutView.hidden = YES;
    maskingOutView.alpha = 0.0;
    
}

#pragma mark - 私有方法
//请求并刷新数据
- (void)refreshRecordData {
    
    dispatch_async(dispatch_get_main_queue(), ^{
        //显示风火轮
        [self.smallFunc createActivityIndicator:self.view AndKey:@"AddSurrenderViewController"];
    });
    
    NSString *method = [NSString stringWithFormat:@"GetBillingMsg"];
    
    [SOAPUrlSession SOAPDataWithMethod:method parameter:nil success:^(id responseObject) {
        
        //-------------------------------更新数据源-------------------------------
        NSDictionary *responseDic = responseObject;
        NSLog(@"GetRotateImageList%@ ----- %@",responseDic[@"Code"],responseDic[@"Message"]);
        
        //返回的Code字段：200-成功，300-失败，400-无数据，500-内部服务异常
        NSString *responseCode = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
        
        if ([responseCode isEqualToString:@"200"]) {
            //操作成功，接口封装返回的数据对象
            NSArray *dataArr = responseObject[@"Data"];
            
            for (NSDictionary *dic in dataArr){
                
                SurrenderMainInfo*model=[[SurrenderMainInfo alloc]initWithitemname:dic[@"itemname"] descriptions:dic[@"description"]];
          
                [rechargeRecordList addObject:model];
           }
            
            //数据更新过后，才调用刷新方法
            dispatch_async(dispatch_get_main_queue(), ^{
                
                for (int i=0; i<rechargeRecordList.count; i++) {
                    SurrenderMainInfo*models=rechargeRecordList[i];
                    
                    if ([models.itemname isEqualToString:@"户名"]) {
                        baseView.labname.text=models.aescriptions;
                    }else if ([models.itemname isEqualToString:@"账号"]) {
                        baseView.labzhanghao.text=models.aescriptions;
                    }else if ([models.itemname isEqualToString:@"开户行"]) {
                        baseView.labhang.text=models.aescriptions;
                    }else if ([models.itemname isEqualToString:@"备注"]) {
                        baseView.labbeizhu.text=[NSString stringWithFormat:@"%@",models.aescriptions];
                    }
                }
                
                //停止风火轮
                [self.smallFunc stopActivityIndicator:@"AddSurrenderViewController"];
            });
        } else {
            //根据后端定义的错误编码，返回不同的提示
            NSLog(@"获取轮播图片信息失败");
            
            dispatch_async(dispatch_get_main_queue(), ^{
                
                //停止风火轮
                [self.smallFunc stopActivityIndicator:@"AddSurrenderViewController"];
            });
        }
        
    } failure:^(NSError *error) {
        //后台连接直接不成功，弹出“连接服务器失败”
        NSLog(@"网络异常：连接服务器失败");
        
        //数据更新过后，才调用刷新方法
        dispatch_async(dispatch_get_main_queue(), ^{
            
            //停止风火轮
            [self.smallFunc stopActivityIndicator:@"AddSurrenderViewController"];
        });
    }];
    
}

- (void)viewDidDisappear:(BOOL)animated {
    [super viewDidDisappear:animated];
    
    //停止风火轮
    [self.smallFunc stopActivityIndicator:@"AddSurrenderViewController"];
 
    //移除蒙版
    if (maskingOutView != nil) {
        [maskingOutView removeFromSuperview];
        maskingOutView = nil;
    }
    
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

#pragma mark - 页面交互

//提交/下一步
- (void)submitAddRecord:(UIButton *)sender {
    
    //按钮不可点击
    sender.enabled = NO;
    
    //隐藏键盘
    [self.view endEditing:YES];
    
    
    //去除text中首尾的空格
//    baseView.textFaren.text = [baseView.textFaren.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
//    baseView.textDianhao.text = [baseView.textDianhao.text stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];
//    
//    //获取需要的数据
//    NSString *paraFaren = baseView.textFaren.text;
//    NSString *paraDianhao = baseView.textDianhao.text;
    
    //校验数据
//    {
//        //备注信息text校验，长度
//        if ([paraFaren isEqualToString:@""]||paraFaren==nil) {
//            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
//            [showMessage showAlertWith:@"请输入商户法人！"];
//            //按钮可以点击
//            sender.enabled = YES;
//            return;
//        }
//        
//        if ([paraFaren length]>10) {
//            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
//            [showMessage showAlertWith:@"请输入正确的商户法人！"];
//            //按钮可以点击
//            sender.enabled = YES;
//            return;
//        }
//        
//        if ([baseView.dateButton.titleLabel.text isEqualToString:@""]||baseView.dateButton.titleLabel.text==nil) {
//            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
//            [showMessage showAlertWith:@"请输入转账时间！"];
//            //按钮可以点击
//            sender.enabled = YES;
//            return;
//        }
//        
//        if ([paraDianhao isEqualToString:@""]||paraDianhao==nil) {
//            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
//            [showMessage showAlertWith:@"请输入交易订单后6位！"];
//            //按钮可以点击
//            sender.enabled = YES;
//            return;
//        }
//        
//        if ([paraDianhao length]!=6) {
//            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
//            [showMessage showAlertWith:@"请输入交易订单的后6位数！"];
//            //按钮可以点击
//            sender.enabled = YES;
//            return;
//        }
//        
//        
//        
//    }
    
    
    //NSString *Str= [NSString stringWithFormat:@"%@|%@|%@",paraFaren,baseView.dateButton.titleLabel.text,paraDianhao];
   
    //弹窗提示
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"是否确定已经打款？" message:nil preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *cancelButton = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:nil];
    UIAlertAction *defaultButton = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        
        //显示风火轮
        [self.smallFunc createActivityIndicator:self.view AndKey:@"AddSurrenderViewController"];
        
        //提交已打款的记录
        NSString *method = [NSString stringWithFormat:@"PaymentApplication"];
        NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                             self.userInfo.UserId,@"UserId",   //用户编号
                             _BusinessPaymentId,@"BusinessPaymentId",  //让利主键编号
                             @"无",@"Description",   //备注信息 paraRemark
                             nil];
        
        [SOAPUrlSession SOAPDataWithMethod:method parameter:dic success:^(id responseObject) {
            
            //-------------------------------更新数据源-------------------------------
            NSDictionary *responseDic = responseObject;
            NSLog(@"%@ ----- %@",responseDic[@"Code"],responseDic[@"Message"]);
            
            //返回的Code字段：200-成功，300-失败，400-无数据，500-内部服务异常
            NSString *responseCode = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
            
            if ([responseCode isEqualToString:@"200"]) {
                
                //弹出成功提示窗
                dispatch_async(dispatch_get_main_queue(), ^{
                    //停止风火轮
                    [self.smallFunc stopActivityIndicator:@"AddSurrenderViewController"];
                    
                    //按钮可以点击
                    sender.enabled = YES;
                    
                    //弹出成功提示窗
                    FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                    [showMessage showAlertWith:@"提交我已打款信息成功"];
                    
                    //刷新所有的tableview
                    [_parentVC refreshAllTableView];
                    
                });
                
                //延时1.5秒，返回到上一界面
                dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1.5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                    [self.navigationController popViewControllerAnimated:YES];
                    
                });
                
                
            } else {
                dispatch_async(dispatch_get_main_queue(), ^{
                    //停止风火轮
                    [self.smallFunc stopActivityIndicator:@"AddSurrenderViewController"];
                    //按钮可以点击
                    sender.enabled = YES;
                    
                    //后台返回的失败信息
                    FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                    [showMessage showAlertWith:responseDic[@"Message"]];
                });
            }
        } failure:^(NSError *error) {
            
            dispatch_async(dispatch_get_main_queue(), ^{
                //停止风火轮
                [self.smallFunc stopActivityIndicator:@"AddSurrenderViewController"];
                //按钮可以点击
                sender.enabled = YES;
                
                FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                [showMessage showAlertWith:@"网络异常：连接服务器失败"];
            });
        }];
        
    }];
    
    //使用runtime属性，修改默认的系统提示窗的字体(只支持8.4以上版本)
    CGFloat iOSVersion = [[[UIDevice currentDevice] systemVersion] floatValue];
    if (iOSVersion >=8.4) {
        [cancelButton setValue:[UIColor darkGrayColor] forKey:@"_titleTextColor"];
        [defaultButton setValue:Publie_Color forKey:@"_titleTextColor"];
    }
    
    [alert addAction:cancelButton];
    [alert addAction:defaultButton];
    [self presentViewController:alert animated:YES completion:nil];
    
    
}


#pragma mark - PTXDatePickerViewDelegate
- (void)datePickerView:(PTXDatePickerView *)datePickerView didSelectDate:(NSDate *)date {
    self.selectedDate = date;
    
    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc]init];
    [dateFormatter setDateFormat:@"yyyy-MM-dd HH:mm"];
    
    //改变蒙版的透明度
    maskingOutView.hidden = NO;
    maskingOutView.alpha = 1.0f;
    
    [UIView animateWithDuration:0.3 animations:^{
        maskingOutView.alpha = 0.0f;
    } completion:^(BOOL finished) {
        maskingOutView.hidden = YES;
    }];
    
//    [baseView.dateButton setTitle:[dateFormatter stringFromDate:date] forState:UIControlStateNormal];
//    baseView.textTime.placeholder=@"";
    
   
}

-(void)selectDate{

    [self.view endEditing:YES];
    if (!_datePickerView) {
        _datePickerView = [[PTXDatePickerView alloc]initWithFrame:CGRectMake(0, SCREEN_HEIGHT, SCREEN_WIDTH, 246.0)];
        _datePickerView.delegate = self;
        [maskingOutView addSubview:_datePickerView];
    }
    
    
    [_datePickerView showViewWithDate:_selectedDate animation:YES];
    
    //改变蒙版的透明度
    maskingOutView.hidden = NO;
    maskingOutView.alpha = 0.0f;
    
    [UIView animateWithDuration:0.3 animations:^{
        maskingOutView.alpha = 1.0f;
    }];
    
}

//收起选择数据的tableview
- (void)pushDownSelectTableView {
    
    //改变蒙版的透明度
    maskingOutView.hidden = NO;
    maskingOutView.alpha = 1.0f;
    
    [UIView animateWithDuration:0.3 animations:^{
        maskingOutView.alpha = 0.0f;
    } completion:^(BOOL finished) {
        maskingOutView.hidden = YES;
        //释放
        [_datePickerView removeFromSuperview];
        self.datePickerView = nil;
    }];
    
}

@end
