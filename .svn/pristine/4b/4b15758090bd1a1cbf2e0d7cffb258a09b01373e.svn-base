//
//  RecommendedMerchantTableViewController.m
//  LFBaseFrameTwo
//
//  Created by yongda sha on 16/12/23.
//  Copyright © 2016年 admin. All rights reserved.
//

#import "RecommendedMerchantTableViewController.h"
#import <MJRefresh.h>
#import <UIImageView+WebCache.h>
#import "MerchantDetailViewController.h"
#import "LocationServiceClass.h"

@interface RecommendedMerchantTableViewController ()
{
    
    //用户信息单例
    UserInformation *userInfo;
    
    //工具方法单例
    SmallFunctionTool *smallFunc;
    
    //无数据时呈现的视图
    UIView *noDataView;
    
    //数据源
    NSMutableArray *rechargeRecordList;
    NSMutableArray *showRecordArray;
    
    //分页的页数
    NSInteger pageNum;
    
    //定位服务单例
    LocationServiceClass *locationService;
    
    // 销售总额
    NSString *totalNumber;
}
@end

@implementation RecommendedMerchantTableViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    if ([_flot isEqualToString:@"1"]) {
        self.view.frame=CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT-64.0-55.0);
    }
    
    //初始化
    userInfo = [UserInformation sharedInstance];
    smallFunc = [SmallFunctionTool sharedInstance];
    rechargeRecordList = [NSMutableArray array];
    showRecordArray = [NSMutableArray array];
    pageNum=1;
    //获取本机定位信息
    locationService = [LocationServiceClass sharedInstance];
    
    self.tableView.rowHeight=100.0;
    //表视图去除下面多余的线
    self.tableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
    
    //添加下拉刷新
    MJRefreshNormalHeader *header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        
        //请求数据+刷新界面
        [self refreshRecordData:NO];
        
        //关闭刷新
        [self.tableView.mj_header endRefreshing];
    }];
    header.stateLabel.font = [UIFont systemFontOfSize:12];
    header.lastUpdatedTimeLabel.font = [UIFont systemFontOfSize:11];
    self.tableView.mj_header = header;
    
    
    //上拉刷新
    MJRefreshAutoNormalFooter *footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{
        
        //调用刷新方法
        [self refreshRecordData:YES];
        
        //关闭刷新
        [self.tableView.mj_footer endRefreshing];
    }];
    footer.automaticallyHidden = YES;//自动根据有无数据来显示和隐藏
    footer.stateLabel.font = [UIFont systemFontOfSize:12];
    
    self.tableView.mj_footer = footer;
    
    //请求数据+刷新界面
    [self refreshRecordData:NO];
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    //定位服务没有开启，弹出提示
    if([CLLocationManager authorizationStatus] != kCLAuthorizationStatusAuthorizedAlways && [CLLocationManager authorizationStatus] != kCLAuthorizationStatusAuthorizedWhenInUse){
        
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"当前页面，需要使用定位服务" message:nil preferredStyle:UIAlertControllerStyleAlert];
        UIAlertAction *cancelButton = [UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleCancel handler:nil];
        
        UIAlertAction *defaultButton = [UIAlertAction actionWithTitle:@"打开定位" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            //打开定位设置
            NSURL *settingsURL = [NSURL URLWithString:UIApplicationOpenSettingsURLString];
            [[UIApplication sharedApplication] openURL:settingsURL];
            
        }];
        
        //使用runtime属性，修改默认的系统提示窗的字体(只支持8.4以上版本)
        CGFloat iOSVersion = [[[UIDevice currentDevice] systemVersion] floatValue];
        if (iOSVersion >=8.4) {
            [cancelButton setValue:[UIColor darkGrayColor] forKey:@"_titleTextColor"];
            [defaultButton setValue:Publie_Color forKey:@"_titleTextColor"];
        }
        
        [alert addAction:cancelButton];
        [alert addAction:defaultButton];
        [self presentViewController:alert animated:YES completion:nil];
        
    }
    
}

-(void)viewDidDisappear:(BOOL)animated{
    
    [super viewDidDisappear:animated];
    
    //停止风火轮
    [smallFunc stopActivityIndicator:@"RecommendedMerchantTableViewController"];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
#pragma mark - 私有方法
//请求并刷新数据
- (void)refreshRecordData:(BOOL)isFooterRefresh {
    
    dispatch_async(dispatch_get_main_queue(), ^{
        //显示风火轮
        [smallFunc createActivityIndicator:self.view AndKey:@"RecommendedMerchantTableViewController"];
    });
    
    if (! isFooterRefresh) { //是下拉刷新
        //下拉刷新或者点击分类刷新，都需要将分页数重新设置为1
        pageNum = 1;
        [showRecordArray removeAllObjects];
    } else { //是上拉刷新
        //为上拉刷新，需要使用累加的分页值
        pageNum++;
    }
    
    
    //是否获取了定位数据
    NSString *longitudeStr; //经度
    NSString *latitudeStr; //维度
    if (locationService.latitudeStr == nil || [locationService.latitudeStr isEqualToString:@"0"]) {
        //默认无法获取定位则传@“0“
        longitudeStr = @"0";
        latitudeStr = @"0";
    } else {
        //获取到的经纬度
        longitudeStr = locationService.longitudeStr;
        latitudeStr = locationService.latitudeStr;
    }
    
    NSString *Action=@"默认";
    NSString *UserId=@"default";
    
    if ([userInfo.UserId isEqualToString:@""]||userInfo.UserId==nil) {
            UserId=@"default";
    }else{
            UserId=userInfo.UserId;
        }
    
    if ([userInfo.RoleType isEqualToString:@"0"]||[userInfo.RoleType isEqualToString:@"10"]) {
            Action=@"默认";
    }else if ([userInfo.RoleType isEqualToString:@"20"]) {
            Action=@"业务";
    }else if ([userInfo.RoleType isEqualToString:@"30"]) {
            Action=@"区代";
    }else if ([userInfo.RoleType isEqualToString:@"40"]) {
            Action=@"省代";
    }
    
    //分页数
    NSString *paraPageNum = [NSString stringWithFormat:@"%ld",(long)pageNum];
    
    NSString *method = [NSString stringWithFormat:@"GetPageUser"];
    NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                         Action,@"Action",   //关联角色（默认、业务、区代、省代、推荐）
                         UserId,@"UserId",
                         paraPageNum,@"PageIndex",
                         @"10",@"PageSize",
                         @"default",@"NickName",//商铺名称(搜索关键字)
                         @"default",@"EntryType",//入驻类型(商铺分类)
                         longitudeStr,@"Precision",//精度
                         latitudeStr,@"Latitude",//纬度
                         @"10",@"RoleType",//用户类型(0-个人、10-商户、20-业务员、30-区代、40省代、default-所有)
                         @"0", @"AreaCode",//地址代码(商户搜索时使用，指定到市级)
                         nil];
    
    [SOAPUrlSession SOAPDataWithMethod:method parameter:dic success:^(id responseObject) {
        
        NSDictionary *responseDic = responseObject;
        NSLog(@"GetPageUser %@ ----- %@",responseDic[@"Code"],responseDic[@"Message"]);
        
        //返回的Code字段：200-成功，300-失败，400-无数据，500-内部服务异常
        NSString *responseCode = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
        
        if ([responseCode isEqualToString:@"200"]) {

            // 销售总额
            totalNumber = [NSString stringWithFormat:@"%@", responseObject[@"Data"][@"saletotal"]];
            
            //后台返回“发送成功”
            NSArray *dataArray = responseObject[@"Data"][@"rows"];
            
            if (dataArray.count > 0) {
                
                //存储接口返回数据
                NSMutableArray *acquireArray = [NSMutableArray array];
                
                //将数据保存到数据源
                for (NSDictionary *dic in dataArray) {//还差销售总额的字段
                    
                    //创建数据
                    MerchantListInfo *oneMerchant = [[MerchantListInfo alloc] initWithuserid:dic[@"userid"] nickname:dic[@"nickname"] realname:dic[@"realname"] headicon:dic[@"headicon"] mobile:dic[@"mobile"] provincename:dic[@"provincename"] cityname:dic[@"cityname"] countyname:dic[@"countyname"] address:dic[@"address"] createdate:longitudeStr consumptiontotal:dic[@"consumptiontotal"] distance:dic[@"distance"] precision:dic[@"precision"] latitude:dic[@"latitude"] businessHours:dic[@"businesshours"]];//没有用到时间
                    
                    [acquireArray addObject:oneMerchant];
                    
                }
                //初始化本地数据，（0-夺宝中，对应的商品列表）
                [rechargeRecordList removeAllObjects];
                rechargeRecordList = [acquireArray mutableCopy];
            } else {
                //展示无夺宝记录的404页面
                [rechargeRecordList removeAllObjects];
                NSLog(@"当前用户无已揭晓夺宝记录");
            }
            
            if (rechargeRecordList.count > 0) {
                //数据更新过后，才调用刷新方法
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    //停止风火轮
                    [smallFunc stopActivityIndicator:@"RecommendedMerchantTableViewController"];
                    
                    //去掉无数据时的视图
                    if (noDataView) {
                        [noDataView removeFromSuperview];
                        noDataView = nil;
                    }
                    
                    //更新数据源
                    if (! isFooterRefresh) { //是下拉刷新
                        showRecordArray = [rechargeRecordList mutableCopy];
                    } else { //是上拉刷新
                        NSArray *resultArr = [rechargeRecordList copy];
                        [showRecordArray addObjectsFromArray:resultArr];
                    }
                    
                    [self.tableView reloadData];
                    
                });
            }
        }else if ([responseCode isEqualToString:@"400"]){
            
            dispatch_async(dispatch_get_main_queue(), ^{
                //停止风火轮
                [smallFunc stopActivityIndicator:@"RecommendedMerchantTableViewController"];
                 [rechargeRecordList removeAllObjects];
            });
           
            if (showRecordArray.count> 0) {
                //数据更新过后，才调用刷新方法
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    //去掉无数据时的视图
                    if (noDataView) {
                        [noDataView removeFromSuperview];
                        noDataView = nil;
                    }
                    
                    FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                    [showMessage showAlertWithTwo:@"没有更多商户数据啦亲！"];
                    return ;
                    
                });
            }else {
                if (! noDataView) {
                    //显示无商品时的图片
                    dispatch_async(dispatch_get_main_queue(), ^{
                        noDataView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)];
                        noDataView.backgroundColor = [UIColor colorWithRed:245.0/255.0f green:245.0/255.0f blue:245.0/255.0f alpha:1.0f];
                        
                        //图标
                        UIImageView *noDataImage = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"暂无商铺信息"]];
                        // CGRect imageFrame =CGRectMake(0, (SCREEN_HEIGHT-SCREEN_WIDTH)/2-20, SCREEN_WIDTH, (SCREEN_WIDTH)*(276.0/750.0));
                        noDataImage.center = CGPointMake(SCREEN_WIDTH/2.0, SCREEN_HEIGHT/2.0 - 150);
                        [noDataView addSubview:noDataImage];
                        [self.view addSubview:noDataView];
                    });
                }
            }
            
        } else {
            
            dispatch_async(dispatch_get_main_queue(), ^{
                //停止风火轮
                [smallFunc stopActivityIndicator:@"RecommendedMerchantTableViewController"];
            });
            
        }
    } failure:^(NSError *error) {
        dispatch_async(dispatch_get_main_queue(), ^{
            //停止风火轮
            [smallFunc stopActivityIndicator:@"RecommendedMerchantTableViewController"];
        });
        //后台连接直接不成功，弹出“连接服务器失败”
        NSLog(@"网络异常：连接服务器失败");
    }];
    
}

#pragma mark - Table view data source
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {

    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {

    if (showRecordArray.count <= 0 || showRecordArray == nil) {
        return 0;
    } else {
        return showRecordArray.count;
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {

    return 120;

}
- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {

    UIView *header = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 120)];
    
    UIImageView *imageView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 120)];
    imageView.image = [UIImage imageNamed:@"账户流水收益image"];
    [header addSubview:imageView];
    
    UILabel *titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 20, SCREEN_WIDTH, 20)];
    titleLabel.text = @"销售总额";
    titleLabel.font = [UIFont systemFontOfSize:20];
    titleLabel.textColor = Label_Color_B;
    titleLabel.textAlignment = NSTextAlignmentCenter;
    [header addSubview:titleLabel];
    
    UILabel *totalLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 50, SCREEN_WIDTH, 30)];
    totalLabel.text = [SmallFunctionTool changeBigNumber:totalNumber];
    totalLabel.textColor = [UIColor orangeColor];
    totalLabel.font = [UIFont systemFontOfSize:30];
    totalLabel.textAlignment = NSTextAlignmentCenter;
    [header addSubview:totalLabel];
    
    return header;

}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"MerchantListCell" forIndexPath:indexPath];
    
    //获取数据源
    MerchantListInfo *oneMerchant = showRecordArray[indexPath.row];
    
    UIImageView *imageMerchant = (UIImageView *)[cell viewWithTag:1000];
    UILabel *labelName = (UILabel *)[cell viewWithTag:1001];
    UILabel *labelAddress = (UILabel *)[cell viewWithTag:1002]; // 地址改成手机号码了
    UIImageView *imageTip = (UIImageView *)[cell viewWithTag:1003];
    UILabel *totalLabel = (UILabel *)[cell viewWithTag:1005];   // 销售总额
    
    //Cell中的数据显示
    if ([oneMerchant.headicon isEqualToString:@""] || oneMerchant.headicon == nil) {
        imageMerchant.image = [UIImage imageNamed:@"defaultHead"];
    } else {
        //设置网络url图片
        NSString *urlStr = [NSString stringWithFormat:@"%@%@",Java_Image_URL,oneMerchant.headicon];
        NSURL *imageUrl = [NSURL URLWithString:urlStr];
        [imageMerchant sd_setImageWithURL:imageUrl placeholderImage:[UIImage imageNamed:@"defaultHead"] options:SDWebImageRetryFailed];
    }
    
    
    // 商户名字
    labelName.text = [NSString stringWithFormat:@"%@", oneMerchant.nickname]; // [oneMerchant.nickname substringWithRange:NSMakeRange(oneMerchant.nickname.length-2, 1)]
    labelAddress.text = oneMerchant.mobile;
    totalLabel.text = [SmallFunctionTool changeBigNumber:oneMerchant.consumptiontotal];
    
//    if([oneMerchant.createdate isEqualToString:@"0"]||oneMerchant.createdate==nil||([oneMerchant.precision isEqualToString:@"0"]&&[oneMerchant.latitude isEqualToString:@"0"])){
//        labelAddress.text = [NSString stringWithFormat:@"%@%@%@%@",oneMerchant.provincename,oneMerchant.cityname,oneMerchant.countyname,oneMerchant.address];
//    }
//    else{
//        
//        NSString* distance=0;
//        if ([oneMerchant.distance floatValue]>=1.0) {
//            distance= [NSString stringWithFormat:@"%0.2f千米",[oneMerchant.distance floatValue]];
//        }else{
//            distance= [NSString stringWithFormat:@"%0.2f米",[oneMerchant.distance floatValue]*1000.0];
//        }
//        
//        NSString *str2 = [NSString stringWithFormat:@"%@%@%@%@ ",oneMerchant.provincename,oneMerchant.cityname,oneMerchant.countyname,oneMerchant.address];
//        NSString *str = [NSString stringWithFormat:@"%@%@%@%@ 约%@",oneMerchant.provincename,oneMerchant.cityname,oneMerchant.countyname,oneMerchant.address,distance];
//        NSString *str1=[NSString stringWithFormat:@"%@",distance];
//        NSMutableAttributedString *aStr = [[NSMutableAttributedString alloc]initWithString:str];
//        [aStr addAttribute:NSForegroundColorAttributeName value:Publie_Color range:NSMakeRange(str2.length,str1.length+1)];
//        
//        [labelAddress setText:str];
//        [labelAddress setAttributedText:aStr];
//    }
    
    //隐藏箭头
    imageTip.hidden = YES;
    
    return cell;

}

//cell被点击后触发
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
       [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
       //获取数据源
       MerchantListInfo *oneMerchant = showRecordArray[indexPath.row];
    
        MerchantDetailViewController *detailVC =[[MerchantDetailViewController alloc]initWithNibName:@"MerchantDetailViewController" bundle:nil];
        detailVC.oneMerchant = oneMerchant;
    
    if ([_flot isEqualToString:@"1"]) {
        //通过addChildViewController添加的子视图控制器，可以使用self.parentViewController获取到父视图
        [self.parentViewController.navigationController pushViewController:detailVC animated:YES];
    }else{
        [self.navigationController pushViewController:detailVC animated:YES];
    }
    
    
}

//tableview的下边线顶格
-(void)viewDidLayoutSubviews
{
    if ([self.tableView respondsToSelector:@selector(setSeparatorInset:)]) {
        [self.tableView setSeparatorInset:UIEdgeInsetsMake(0,0,0,0)];
    }
    
    if ([self.tableView respondsToSelector:@selector(setLayoutMargins:)]) {
        [self.tableView setLayoutMargins:UIEdgeInsetsMake(0,0,0,0)];
    }
}
-(void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) {
        [cell setSeparatorInset:UIEdgeInsetsZero];
    }
    
    if ([cell respondsToSelector:@selector(setLayoutMargins:)]) {
        [cell setLayoutMargins:UIEdgeInsetsZero];
    }
}


@end
