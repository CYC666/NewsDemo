//
//  ZGMyCollectViewController.m
//  LFBaseFrameTwo
//
//  Created by CYC on 2017/5/3.
//  Copyright © 2017年 admin. All rights reserved.
//

#import "ZGMyCollectViewController.h"
#import "ZGMyCollectCell.h"
#import "ZGNoCollectView.h"
#import "ZGGoodsModel.h"
#import "ShangPingDetailCollectionViewController.h"

#define UITableViewCellID @"ZGMyCollectCell"

@interface ZGMyCollectViewController () <UITableViewDelegate, UITableViewDataSource> {

    UITableView *_colectTableView;      // 表视图
    NSMutableArray *_dataArray;         // 收藏列表
    ZGNoCollectView *_noDataView;       // 暂无收藏
    
    //用户信息单例
    UserInformation *userInfo;
    
    //工具方法单例
    SmallFunctionTool *smallFunc;
    

}

@end

@implementation ZGMyCollectViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.navigationItem.title = @"我的收藏";
    
    //初始化
    userInfo = [UserInformation sharedInstance];
    smallFunc = [SmallFunctionTool sharedInstance];
    _dataArray = [NSMutableArray array];
    
    // 表视图
    _colectTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, kScreenHeight)
                                                  style:UITableViewStylePlain ];
    _colectTableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
    _colectTableView.backgroundColor = [UIColor clearColor];
    _colectTableView.rowHeight = 105;
    _colectTableView.delegate = self;
    _colectTableView.dataSource = self;
    [_colectTableView registerNib:[UINib nibWithNibName:@"ZGMyCollectCell" bundle:[NSBundle mainBundle]]
         forCellReuseIdentifier:UITableViewCellID];
    [self.view addSubview:_colectTableView];
    
    
    // 无收藏页
    _noDataView = [[[NSBundle mainBundle] loadNibNamed:@"ZGNoCollectView" owner:self options:nil] firstObject];
    _noDataView.frame = self.view.frame;
    _noDataView.goShopButton.layer.cornerRadius = 10;
    _noDataView.goShopButton.layer.borderWidth = 1;
    _noDataView.goShopButton.layer.borderColor = Publie_Color.CGColor;
    [_noDataView.goShopButton addTarget:self action:@selector(guangguangAction:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:_noDataView];
    _noDataView.hidden = YES;
    
    
}

- (void)viewWillAppear:(BOOL)animated {
    
    [super viewWillAppear:animated];
    
    // 加载数据
    [self loadNetData];
    
}

- (void)viewWillDisappear:(BOOL)animated {
    
    [super viewWillDisappear:animated];
    
    //停止风火轮
    [smallFunc stopActivityIndicator:@"ZGMyCollectViewController"];
    
    
}

#pragma mark - 加载数据
- (void)loadNetData {
    
    //显示风火轮
    [smallFunc createActivityIndicator:self.view AndKey:@"ZGMyCollectViewController"];
    
    [_dataArray removeAllObjects];
    
    // 查看我的收藏
    NSDictionary *dic0 = @{@"phone" : userInfo.phone};
    [SOAPUrlSession AFHTTPSessionManager:@"CollectionManage/getCollectionList" parameter:dic0 success:^(id responseObject) {
        
        NSArray *listArray = responseObject[@"list"];
        
        for (NSDictionary *dic in listArray) {
            ZGGoodsModel *model = [[ZGGoodsModel alloc] init];
            model.appUserId = dic[@"appUserId"];
            model.commodityId = dic[@"commodityId"];
            model.phone = dic[@"phone"];
            model.sort_name = dic[@"sort_name"];
            model.commodity_name = dic[@"commodity_name"];
            model.commodity_price = dic[@"commodity_price"];
            model.commodityUrl = dic[@"commodityUrl"];
            [_dataArray addObject:model];
        }
        
        //主线程更新视图
        dispatch_async(dispatch_get_main_queue(), ^{
            
            [_colectTableView reloadData];
            
        });
        
        //停止风火轮
        [smallFunc stopActivityIndicator:@"ZGMyCollectViewController"];
        
        
    } failure:^(NSError *error) {
        //后台连接直接不成功，弹出“连接服务器失败”
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"网络异常：连接服务器失败"];
        
        //停止风火轮
        [smallFunc stopActivityIndicator:@"ZGMyCollectViewController"];
    }];
    
}

#pragma mark - 没有数据时，点击逛一逛
- (void)guangguangAction:(UIButton *)button {

    [self.navigationController popViewControllerAnimated:YES];

}



#pragma mark - 表视图代理方法
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {

    return 1;

}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {

    return _dataArray.count;

}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {

    ZGMyCollectCell *cell = [tableView dequeueReusableCellWithIdentifier:UITableViewCellID forIndexPath:indexPath];
    
    if (_dataArray.count == 0) {
        return cell;
    }
    
    ZGGoodsModel *model = _dataArray[indexPath.row];
    
    // 图片
    
    NSString *path = [NSString stringWithFormat:@"%@%@", Java_Image_URL, model.commodityUrl];
    [cell.iconImageView sd_setImageWithURL:[NSURL URLWithString:path]
                          placeholderImage:[UIImage imageNamed:@"defaultHead"]
                                   options:SDWebImageRetryFailed];
    
    
    // 名字
    cell.nameLabel.text = model.commodity_name;
    
    // 品种
    cell.kindLabel.text = model.sort_name;
    
    // 价格
    cell.moneyLabel.text = [NSString stringWithFormat:@"%@", model.commodity_price];
    
    
    return cell;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {

    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    if (_dataArray.count == 0) {
        return;
    }
    
    // 跳转到商品详情
    ZGGoodsModel *model = _dataArray[indexPath.row];
    
    ShangPingDetailCollectionViewController *goodsDetailsVC = [[UIStoryboard storyboardWithName:@"Main" bundle:[NSBundle mainBundle]]
                                                               instantiateViewControllerWithIdentifier:@"ShangPingDetailCollectionViewController"];
    goodsDetailsVC.goodsID = model.commodityId;
    goodsDetailsVC.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:goodsDetailsVC animated:YES];
    
    
}



#pragma mark - 表视图编辑模式
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath {
    
    return YES;

}

- (nullable NSString *)tableView:(UITableView *)tableView titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)indexPath {

    return @"删除收藏";

}

- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath {
    
    // 弹框提示是否执行
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil
                                                                   message:@"确定删除此收藏？"
                                                            preferredStyle:UIAlertControllerStyleAlert];
    
    [alert addAction:[UIAlertAction actionWithTitle:@"取消"
                                              style:UIAlertActionStyleDefault
                                            handler:^(UIAlertAction * _Nonnull action) {
                                                
                                            }]];
    [alert addAction:[UIAlertAction actionWithTitle:@"确定"
                                              style:UIAlertActionStyleDefault
                                            handler:^(UIAlertAction * _Nonnull action) {
                                                
                                                ZGGoodsModel *model = _dataArray[indexPath.row];
                                                
                                                //删除
                                                NSDictionary *dic = @{@"phone" : userInfo.phone,                // 电话号码
                                                                      @"commodityId" : model.commodityId,       // 商品ID
                                                                      };
                                                [SOAPUrlSession AFHTTPSessionManager:@"CollectionManage/deleteCollection" parameter:dic success:^(id responseObject) {
                                                    
                                                    if ([responseObject[@"msg"] isEqualToString:@"success"]) {
                                                        
                                                        [self loadNetData];
                                                        
                                                    }
                                                    
                                                    
                                                    
                                                } failure:^(NSError *error) {
                                                    //后台连接直接不成功，弹出“连接服务器失败”
                                                    FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                                                    [showMessage showAlertWith:@"网络异常：连接服务器失败"];
                                                }];
                                                
                                            }]];
    
    [self presentViewController:alert animated:YES completion:nil];
    
    


}


























@end
