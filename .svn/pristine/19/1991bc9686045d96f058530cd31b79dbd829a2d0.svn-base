//
//  HMYGShoppingCarViewController.m
//  LFBaseFrameTwo
//
//  Created by maco on 2017/4/7.
//  Copyright © 2017年 admin. All rights reserved.
//

#import "HMYGShoppingCarViewController.h"
#import "HMYGShoppingCarItemCell.h"
#import "HMYGComfirmOrderViewController.h"
#import "HMYGCarGoodsModel.h"
#import <UIImageView+WebCache.h>
#import "ZGFillOrderViewController.h"
#import "ZGGoodsModel.h"
#import "LoginViewController.h"

@interface HMYGShoppingCarViewController ()<UITableViewDelegate, UITableViewDataSource, UIScrollViewDelegate>
{
    BOOL _isEditing;
    BOOL _isSelectAll;
    
    //用户信息单例
    UserInformation *userInfo;
    
    //工具方法单例
    SmallFunctionTool *smallFunc;
    
    // 数据
    NSMutableArray *goodsArray;
    
    
    
}
// 大健康商城按钮
@property (weak, nonatomic) IBOutlet UIButton *shangchengButton;
// 理财平台按钮
@property (weak, nonatomic) IBOutlet UIButton *pingtaiButton;
// 红色伪滑块
@property (weak, nonatomic) IBOutlet UILabel *redLabel;

// 全选按钮
@property (weak, nonatomic) IBOutlet UIButton *selectAllButton;
// 已选个数
@property (weak, nonatomic) IBOutlet UILabel *countLabel;
// 总共金额
@property (weak, nonatomic) IBOutlet UILabel *moneyLabel;
// 结算
@property (weak, nonatomic) IBOutlet UIButton *dealButton;
// 全选状态image
@property (weak, nonatomic) IBOutlet UIImageView *selectStatusImageView;
// 滑动视图
@property (weak, nonatomic) IBOutlet UIScrollView *myScrollView;
// 表视图
@property (strong, nonatomic) UITableView *myTableView;

@end

@implementation HMYGShoppingCarViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    //初始化
    userInfo = [UserInformation sharedInstance];
    smallFunc = [SmallFunctionTool sharedInstance];
    goodsArray = [NSMutableArray array];
    
//    _myScrollView.contentSize = CGSizeMake(kScreenWidth * 2, _myScrollView.frame.size.height);
//    _myScrollView.delegate = self;
//    _myScrollView.pagingEnabled = YES;
    
    // 购物车
    _myTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 64, kScreenWidth, SCREEN_HEIGHT-64-49-50) style:UITableViewStylePlain];
    self.myTableView.delegate = self;
    self.myTableView.dataSource = self;
    self.myTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [_myTableView registerNib:[UINib nibWithNibName:@"HMYGShoppingCarItemCell" bundle:[NSBundle mainBundle]]
       forCellReuseIdentifier:@"HMYGShoppingCarItemCell"];
    [self.view addSubview:_myTableView];
    
    // 理财产品
//    UIImageView *licaiImageView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"ZG理财积分"]];
//    licaiImageView.center = CGPointMake(kScreenWidth + kScreenWidth * 0.5, _myScrollView.frame.size.height * 0.5);
//    [_myScrollView addSubview:licaiImageView];
    
    _isEditing = NO;
    _isSelectAll = NO;
    self.title = @"购物车";
    
    
    // 导航栏右边的添加按钮
    UIButton *rightItem = [UIButton buttonWithType:UIButtonTypeCustom];
    [rightItem setTitle:@"编辑" forState:UIControlStateNormal];
    [rightItem setTintColor:[UIColor whiteColor]];
    rightItem.frame = CGRectMake(0, 0, 60, 22);
    [rightItem addTarget:self action:@selector(editButtonClick:) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *rightBarItem = [[UIBarButtonItem alloc] initWithCustomView:rightItem];
    self.navigationItem.rightBarButtonItem = rightBarItem;
    
    //[_shangchengButton addTarget:self action:@selector(changeSelectAction:) forControlEvents:UIControlEventTouchUpInside];
    //[_pingtaiButton addTarget:self action:@selector(changeSelectAction:) forControlEvents:UIControlEventTouchUpInside];
    
    
    
    
    
    
}

// 界面显示后查看购物车
- (void)viewWillAppear:(BOOL)animated {

    [super viewWillAppear:animated];
    
    //判断当前是否登录，如果未登录则跳转到登录界面，如果登录则下载用户信息
    if (![userInfo isLoginWithUserId]) {
        
        //创建登录导航控制器
        LoginViewController *loginView = [self.storyboard instantiateViewControllerWithIdentifier:@"LoginViewController"];;
        //设置返回按钮点击后返回的界面的类名，（返回首页传“MainPage”）
        loginView.backToClassName = @"MainPage";
        //设置登录成功时返回的界面的类名，（如果遍历self.navigationController.viewControllers没有对应的类，跳到个人中心）
        loginView.goToClassName = @"MainPage";
        
        [self.navigationController pushViewController:loginView animated:YES];
    } else {
    
        [self getShoppingData];
    
    }
    
    // 取消所有选中
    self.selectStatusImageView.image = [UIImage imageNamed:@"椭圆21"];
    

}

- (void)viewWillDisappear:(BOOL)animated {

    [super viewWillDisappear:animated];
    
    //停止风火轮
    [smallFunc stopActivityIndicator:@"HMYGShoppingCarViewController"];

}



#pragma mark - 滑动视图的分页
- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView {

    if (scrollView.contentOffset.x < kScreenWidth) {
        [_shangchengButton setTitleColor:Publie_Color forState:UIControlStateNormal];
        [_pingtaiButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
        [UIView animateWithDuration:.35
                         animations:^{
                             _redLabel.transform = CGAffineTransformIdentity;
                         }];
        
    } else {
        [_shangchengButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
        [_pingtaiButton setTitleColor:Publie_Color forState:UIControlStateNormal];
        [UIView animateWithDuration:.35
                         animations:^{
                             _redLabel.transform = CGAffineTransformMakeTranslation(kScreenWidth * 0.5, 0);
                         }];
    }

}

#pragma mark - 切换大健康商城和理财平台
- (void)changeSelectAction:(UIButton *)button {

    if ([button isEqual:_shangchengButton]) {
        [_shangchengButton setTitleColor:Publie_Color forState:UIControlStateNormal];
        [_pingtaiButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
        [UIView animateWithDuration:.35
                         animations:^{
                             _redLabel.transform = CGAffineTransformIdentity;
                             _myScrollView.contentOffset = CGPointMake(0, 0);
                         }];
    } else {
        [_shangchengButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
        [_pingtaiButton setTitleColor:Publie_Color forState:UIControlStateNormal];
        [UIView animateWithDuration:.35
                         animations:^{
                             _redLabel.transform = CGAffineTransformMakeTranslation(kScreenWidth * 0.5, 0);
                             _myScrollView.contentOffset = CGPointMake(kScreenWidth, 0);
                         }];
    }
    
    
    // 根据点击的按钮刷新表视图

}

#pragma mark - 编辑单元格
- (void)editButtonClick:(UIButton *)sender
{
    sender.selected = !sender.selected;
    _isEditing = sender.selected;
    
    
    
    if (sender.selected) {
        [sender setTitle:@"完成" forState:UIControlStateNormal];
        // 编辑状态不能点击结算
        self.dealButton.enabled = NO;
        self.dealButton.alpha = 0.8;
    } else {
        [sender setTitle:@"编辑" forState:UIControlStateNormal];
        // 非编辑状态能点击结算
        self.dealButton.enabled = YES;
        self.dealButton.alpha = 1.0;
    }
    
    [self.myTableView reloadData];
}

// 结算,跳转到订单页
- (IBAction)dealButtonClick:(UIButton *)sender
{

    
    // 结算订单
    ZGFillOrderViewController *ctrl = [[ZGFillOrderViewController alloc] init];
    NSMutableArray *goods = [NSMutableArray array];
    float priceCount = 0;
    for (ZGGoodsModel *model in goodsArray) {
        if (model.isSelect) {
            [goods addObject:model];
            priceCount += [model.commodity_price floatValue] * [model.count integerValue];
        }
    }
    if (goods.count == 0) {
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"尚未选择要结算的商品"];
        return;
    }
    // 传入商品列表
    ctrl.goodsList = goods;
    ctrl.priceTotal = [NSString stringWithFormat:@"%.2f", priceCount];
    
    [self.navigationController pushViewController:ctrl animated:YES];
    
    // 如果没有选中商品，不允许跳到结算页
//    NSInteger countB = 0;
//    for (HMYGCarGoodsModel *model in goodsArray) {
//        
//        // 前提是选择了该商品
//        if (model.isSelect) {
//            countB++;
//        }
//        
//    }
//    
//    if (countB < 1) {
//        
//        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
//        [showMessage showAlertWith:@"尚未选择要结算的商品"];
//        
//        return;
//    }
//    
//    HMYGComfirmOrderViewController *comfirmVC = [[UIStoryboard storyboardWithName:@"Main" bundle:nil] instantiateViewControllerWithIdentifier:@"HMYGComfirmOrderViewController"];
//    // 获取选择了的商品
//    NSMutableArray *tempArray = [NSMutableArray array];
//    // 消耗银豆总量
//    NSInteger payCount = 0;
//    for (HMYGCarGoodsModel *model in goodsArray) {
//        if (model.isSelect) {
//            [tempArray addObject:model];
//            payCount++;
//        }
//    }
//    
//    comfirmVC.goodsArray = tempArray;
//    comfirmVC.payCount = payCount;
//    [self.navigationController pushViewController:comfirmVC animated:YES];
}

// 全选商品按钮
- (IBAction)selectAllBtnClick:(UIButton *)sender {
    _isSelectAll = !_isSelectAll;
    if (_isSelectAll) {
        self.selectStatusImageView.image = [UIImage imageNamed:@"选择22"];
        // 遍历所有商品，选中
        for (HMYGCarGoodsModel *mdoel in goodsArray) {
            mdoel.isSelect = YES;
        }
    }else{
        self.selectStatusImageView.image = [UIImage imageNamed:@"椭圆21"];
        // 遍历所有商品，不选中
        for (HMYGCarGoodsModel *mdoel in goodsArray) {
            mdoel.isSelect = NO;
        }
    }
    
    [self setBottomCount];
    
    [self.myTableView reloadData];
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return goodsArray.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    HMYGShoppingCarItemCell *cell = [tableView dequeueReusableCellWithIdentifier:@"HMYGShoppingCarItemCell" forIndexPath:indexPath];
    if (goodsArray.count == 0) {
        return cell;
    }
    
    // 获取商品信息
    ZGGoodsModel *model = goodsArray[indexPath.section];

    cell.isEditing = _isEditing;
    
    
    
    // 是否选择
    if (model.isSelect) {
        cell.isSelectButton.selected = YES;
        [cell.isSelectButton setImage:[UIImage imageNamed:@"ZG选择"] forState:UIControlStateNormal];
    }else{
        cell.isSelectButton.selected = NO;
        [cell.isSelectButton setImage:[UIImage imageNamed:@"ZG未选"] forState:UIControlStateNormal];
    }
    cell.isSelectButton.tag = 200 + indexPath.section;
    [cell.isSelectButton addTarget:self action:@selector(selectGoodsAction:) forControlEvents:UIControlEventTouchUpInside];

    // 是否抽奖
    cell.flagLabel.hidden = YES;

    // 图片
    NSString *path = [NSString stringWithFormat:@"%@%@", Java_Image_URL, model.commodityUrl];
    [cell.iconImageView sd_setImageWithURL:[NSURL URLWithString:path]
                          placeholderImage:[UIImage imageNamed:@"defaultHead"]
                                   options:SDWebImageRetryFailed];
    
    
    // 名称
    cell.nameLabel.text = model.commodity_name;
    
    // 数量
    NSString *priceText = [NSString stringWithFormat:@"%@ x %@",model.commodity_price,model.count];
    NSMutableAttributedString *priceString = [[NSMutableAttributedString alloc]initWithString:priceText];
    [priceString setAttributes:@{NSForegroundColorAttributeName:[UIColor redColor]} range:[priceText rangeOfString:model.commodity_price]];
    cell.normalNumberLabel.attributedText = priceString;
//cell.normalNumberLabel.text = model.count;
    cell.editNumberLabel.text = model.count;
    
    // 减一
    cell.wwDeleteButton.tag = 300 + indexPath.section;
    [cell.wwDeleteButton addTarget:self action:@selector(deleteOneAction:) forControlEvents:UIControlEventTouchUpInside];
    
    // 加一
    cell.wwAddButton.tag = 400 + indexPath.section;
    [cell.wwAddButton addTarget:self action:@selector(addOneAction:) forControlEvents:UIControlEventTouchUpInside];
    
    // 删除
    cell.deleteButton.tag = 500 + indexPath.section;
    [cell.deleteButton addTarget:self action:@selector(deleteGoodsAction:) forControlEvents:UIControlEventTouchUpInside];
    
    
    
    
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 95;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 10;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    if (goodsArray.count == 0) {
        return;
    }
    
    ZGGoodsModel *model = goodsArray[indexPath.section];
    model.isSelect = !model.isSelect;
    
    
    [_myTableView reloadData];

    // 设置底部总数显示
    [self setBottomCount];
}

#pragma mark - 获取购物车数据
- (void)getShoppingData {
    
    //显示风火轮
    // [smallFunc createActivityIndicator:self.view AndKey:@"HMYGShoppingCarViewController"];
    
    [goodsArray removeAllObjects];
    
    //请求Java
    NSDictionary *dic0 = @{@"phone" : userInfo.phone   //手机号，登录账号
                           };
    [SOAPUrlSession AFHTTPSessionManager:@"shoppingCartManage/getShoppingCart" parameter:dic0 success:^(id responseObject) {
        
        NSArray *listArray = responseObject[@"list"];
        
        if (listArray.count > 0) {
            for (NSDictionary *dic in listArray) {
                ZGGoodsModel *model = [[ZGGoodsModel alloc] init];
                model.appUserId = [NSString stringWithFormat:@"%@", dic[@"appUserId"]];
                model.commodityId = [NSString stringWithFormat:@"%@", dic[@"commodityId"]];
                model.commodityUrl = [NSString stringWithFormat:@"%@", dic[@"commodityUrl"]];
                model.commodity_name = [NSString stringWithFormat:@"%@", dic[@"commodity_name"]];
                model.commodity_price = [NSString stringWithFormat:@"%@", dic[@"commodity_price"]];
                model.count = [NSString stringWithFormat:@"%@", dic[@"count"]];
                model.phone = [NSString stringWithFormat:@"%@", dic[@"phone"]];
                model.sort_name = [NSString stringWithFormat:@"%@", dic[@"sort_name"]];
                [goodsArray addObject:model];
            }
        }
        
        //主线程更新视图
        dispatch_async(dispatch_get_main_queue(), ^{
            
            // 刷新表视图
            [_myTableView reloadData];
            [self setBottomCount];
            
            if (goodsArray.count == 0) {
                // 发送通知，修改购物车数量徽标
                [[NSNotificationCenter defaultCenter] postNotificationName:@"ShoppingCarBadgeValue" object:nil];
                FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                [showMessage showAlertWith:@"购物车空空"];
            } else {
                // 发送通知，修改购物车数量徽标
                [[NSNotificationCenter defaultCenter] postNotificationName:@"ShoppingCarBadgeValue" object:nil];
            }
            
        });
        
        //停止风火轮
        [smallFunc stopActivityIndicator:@"HMYGShoppingCarViewController"];
        
        
    } failure:^(NSError *error) {
        
        //停止风火轮
        [smallFunc stopActivityIndicator:@"HMYGShoppingCarViewController"];
        //后台连接直接不成功，弹出“连接服务器失败”
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"网络异常：连接服务器失败"];
    }];
    
    
    
}


#pragma mark - 单元格的UI响应
// 选择
- (void)selectGoodsAction:(UIButton *)button {

    NSInteger index = button.tag - 200;
    if (goodsArray.count == 0) {
        return;
    }
    ZGGoodsModel *model = goodsArray[index];
    model.isSelect = !model.isSelect;
    
    
    [_myTableView reloadData];
    
    // 设置底部总数显示
    [self setBottomCount];

}

// 减一
- (void)deleteOneAction:(UIButton *)button {
    
    if (goodsArray.count == 0) {
        return;
    }
    
    button.enabled = NO;
    
    NSInteger index = button.tag - 300;
    ZGGoodsModel *model = goodsArray[index];
    
    NSInteger count = [model.count integerValue] - 1;
    
    if (count == 0) {
        
        // 删除
        NSDictionary *dic = @{@"commodityId" : model.commodityId,       // 商品ID
                              @"phone" : model.phone,                   // 手机号
                              @"count" : model.count                    // 数量
                              };
        
        //显示风火轮
        [smallFunc createActivityIndicator:self.view AndKey:@"HMYGShoppingCarViewController"];
        
        [SOAPUrlSession AFHTTPSessionManager:@"shoppingCartManage/deleteCommodity" parameter:dic success:^(id responseObject) {
            
            
            if ([responseObject[@"msg"] isEqualToString:@"success"]) {
                //主线程更新视图
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    // 重新获取数据
                    [self getShoppingData];
                    
                });
            }
            
            button.enabled = YES;
            //停止风火轮
            [smallFunc stopActivityIndicator:@"HMYGShoppingCarViewController"];
            
        } failure:^(NSError *error) {
            //后台连接直接不成功，弹出“连接服务器失败”
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWith:@"网络异常：连接服务器失败"];
            
            button.enabled = YES;
            
            //停止风火轮
            [smallFunc stopActivityIndicator:@"HMYGShoppingCarViewController"];
        }];
        
    } else {
    
        //减一
        NSDictionary *dic = @{@"commodityId" : model.commodityId,                   // 商品ID
                              @"phone" : model.phone,                               // 手机号
                              @"count" : [NSString stringWithFormat:@"%ld", count]  // 数量
                              };
        
        //显示风火轮
        [smallFunc createActivityIndicator:self.view AndKey:@"HMYGShoppingCarViewController"];
        
        [SOAPUrlSession AFHTTPSessionManager:@"shoppingCartManage/updateCommodityCount" parameter:dic success:^(id responseObject) {
            
            if ([responseObject[@"msg"] isEqualToString:@"success"]) {
                //主线程更新视图
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    // 重新获取数据
                    [self getShoppingData];
                    
                });
            }
            
            button.enabled = YES;
            //停止风火轮
            [smallFunc stopActivityIndicator:@"HMYGShoppingCarViewController"];
            
        } failure:^(NSError *error) {
            //后台连接直接不成功，弹出“连接服务器失败”
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWith:@"网络异常：连接服务器失败"];
            
            button.enabled = YES;
            //停止风火轮
            [smallFunc stopActivityIndicator:@"HMYGShoppingCarViewController"];
        }];

    
    }
    
    
}


// 加一
- (void)addOneAction:(UIButton *)button {
    
    if (goodsArray.count == 0) {
        return;
    }
    
    button.enabled = NO;
    
    NSInteger index = button.tag - 400;
    ZGGoodsModel *model = goodsArray[index];
    
    NSInteger count = [model.count integerValue] + 1;
    
    NSDictionary *dic = @{@"commodityId" : model.commodityId,                   // 商品ID
                          @"phone" : model.phone,                               // 手机号
                          @"count" : [NSString stringWithFormat:@"%ld", count]  // 数量
                          };
    //显示风火轮
    [smallFunc createActivityIndicator:self.view AndKey:@"HMYGShoppingCarViewController"];
    [SOAPUrlSession AFHTTPSessionManager:@"shoppingCartManage/updateCommodityCount" parameter:dic success:^(id responseObject) {
        
        if ([responseObject[@"msg"] isEqualToString:@"success"]) {
            //主线程更新视图
            dispatch_async(dispatch_get_main_queue(), ^{
                
                // 重新获取数据
                [self getShoppingData];
                
            });
        }
        
        //停止风火轮
        [smallFunc stopActivityIndicator:@"HMYGShoppingCarViewController"];
        
        button.enabled = YES;
        
    } failure:^(NSError *error) {
        //后台连接直接不成功，弹出“连接服务器失败”
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"网络异常：连接服务器失败"];
        
        button.enabled = YES;
        //停止风火轮
        [smallFunc stopActivityIndicator:@"HMYGShoppingCarViewController"];
    }];
    
    
}

// 删除
- (void)deleteGoodsAction:(UIButton *)button {
    
    if (goodsArray.count == 0) {
        return;
    }
    
    NSInteger index = button.tag - 500;
    ZGGoodsModel *model = goodsArray[index];
    
    
    //请求Java
    NSDictionary *dic = @{@"commodityId" : model.commodityId,       // 商品ID
                          @"phone" : model.phone,                   // 手机号
                          @"count" : model.count                    // 数量
                          };
    
    //显示风火轮
    [smallFunc createActivityIndicator:self.view AndKey:@"HMYGShoppingCarViewController"];
    button.enabled = NO;
    
    [SOAPUrlSession AFHTTPSessionManager:@"shoppingCartManage/deleteCommodity" parameter:dic success:^(id responseObject) {
        
        
        if ([responseObject[@"msg"] isEqualToString:@"success"]) {
            //主线程更新视图
            dispatch_async(dispatch_get_main_queue(), ^{
                
                // 重新获取数据
                [self getShoppingData];
                
            });
        }
        
        //停止风火轮
        [smallFunc stopActivityIndicator:@"HMYGShoppingCarViewController"];
        button.enabled = YES;
        
    } failure:^(NSError *error) {
        //后台连接直接不成功，弹出“连接服务器失败”
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"网络异常：连接服务器失败"];
        
        //停止风火轮
        [smallFunc stopActivityIndicator:@"HMYGShoppingCarViewController"];
        button.enabled = YES;
    }];
    
    
}




#pragma mark - 银豆总数跟结算数目(每次修改都会调用)
- (void)setBottomCount {

    // 总共金额
    NSInteger countA = 0;
    
    // 选中个数
    NSInteger countB = 0;
    
    for (ZGGoodsModel *model in goodsArray) {
        
        // 前提是选择了该商品
        if (model.isSelect) {
            countA += [model.commodity_price integerValue] * [model.count integerValue];
            countB++;
        }
        
    }
    _moneyLabel.text = [NSString stringWithFormat:@"￥%ld", countA];

    NSString *title = [NSString stringWithFormat:@"已选(%ld)", countB];
    _countLabel.text = title;
    

}




























@end
