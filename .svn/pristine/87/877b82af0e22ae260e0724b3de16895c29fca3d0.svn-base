//
//  HMYGEditAddressViewController.m
//  LFBaseFrameTwo
//
//  Created by yongda sha on 2017/4/10.
//  Copyright © 2017年 admin. All rights reserved.
//

// 编辑地址

#import "HMYGEditAddressViewController.h"
#import "SelectByWindowView.h"
#import "ZGAddressModel.h"

@interface HMYGEditAddressViewController () <UITableViewDelegate, UITableViewDataSource> {

    //用户信息单例
    UserInformation *userInfo;
    
    //工具方法单例
    SmallFunctionTool *smallFunc;
    
    
    //选择的tableview
    SelectByWindowView *selectView;
    
    //省市区选择标志位，(0-省份，1-城市，2-区县)
    NSInteger addressFlag;
    
    //省份信息的数据源
    NSDictionary *provinceDic;
    //城市信息的数据源
    NSMutableDictionary *cityDic;
    //地区信息的数据源
    NSMutableDictionary *countyDic;
    
    //省
    NSString *province;
    NSString *provinceCode;
    //市
    NSString *city;
    NSString *cityCode;
    //县
    NSString *county;
    NSString *countyCode;
    
    // 是否默认
    BOOL isDefault;

}

@end

@implementation HMYGEditAddressViewController

// 当是编辑地址的情况，就会调用这个初始化方法
- (instancetype)initWithAddress:(ZGAddressModel *)address {

    if (self = [super init]) {
        _address = address;
    }
    return self;

}



- (void)viewDidLoad {
    [super viewDidLoad];
    
    // 初始化
    userInfo = [UserInformation sharedInstance];
    smallFunc = [SmallFunctionTool sharedInstance];

    self.navigationItem.title = @"新建地址";
    self.view.backgroundColor = [UIColor whiteColor];
    
    // 导航栏右边的保存按钮
    UIButton *rightItem = [UIButton buttonWithType:UIButtonTypeCustom];
    [rightItem setTitle:@"保存" forState:UIControlStateNormal];
    [rightItem setTintColor:[UIColor whiteColor]];
    rightItem.frame = CGRectMake(0, 0, 40, 22);
    [rightItem addTarget:self action:@selector(saveAction:) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *rightBarItem = [[UIBarButtonItem alloc] initWithCustomView:rightItem];
    self.navigationItem.rightBarButtonItem = rightBarItem;
    
    
    
    //初始化
    provinceDic = [SmallFunctionTool haveAllProvince]; //省份的数据源始终是不变化的
    cityDic = [NSMutableDictionary dictionary];
    countyDic = [NSMutableDictionary dictionary];
    
    // 当是编辑状态，而非新增，那么赋予旧地址信息
    if (_address != nil) {
        _userName.text = _address.recipientName;
        _phoneNumber.text = _address.recipientPhone;
        _cityLabel.text = @"";
        _detialLocationField.text = @"";
        if (_address.isdefault) {
            [_isDefaultImage setImage:[UIImage imageNamed:@"ZG选择"]];
        } else {
            [_isDefaultImage setImage:[UIImage imageNamed:@"ZG未选"]];
        }
    }

}




- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
    
    //创建xib中的表视图，并添加到self.window中
    if (selectView != nil) {
        [selectView removeFromSuperview];
        selectView = nil;
    }
    selectView = [SelectByWindowView viewFromNIB];
    selectView.frame = CGRectMake(0, SCREEN_HEIGHT, SCREEN_WIDTH, SCREEN_HEIGHT);
    [self.view.window addSubview:selectView];
    
    //设置xib中的控件的操作
    [selectView.buttonGoBack addTarget:self action:@selector(allGoBackOperation:) forControlEvents:UIControlEventTouchUpInside];
    [selectView.goBackTopButton addTarget:self action:@selector(allGoBackOperation:) forControlEvents:UIControlEventTouchUpInside];
    
    //添加委托
    selectView.selTableView.delegate = self;
    selectView.selTableView.dataSource = self;
    
}

- (void)viewDidDisappear:(BOOL)animated {

    [super viewDidDisappear:animated];
    
    [selectView removeFromSuperview];
    selectView = nil;
    
    //停止风火轮
    [smallFunc stopActivityIndicator:@"HMYGEditAddressViewController"];

}




#pragma mark - 响应区
// 设为默认
- (IBAction)beDefaultAction:(id)sender {
    
    isDefault = !isDefault;
    
    if (isDefault) {
        [_isDefaultImage setImage:[UIImage imageNamed:@"ZG选择"]];
    } else {
        [_isDefaultImage setImage:[UIImage imageNamed:@"ZG未选"]];
    }
    
}


// 保存
- (IBAction)saveAction:(UIButton *)sender {
    
    sender.enabled = NO;
    
    //判断网络可达性
    if (! [SOAPUrlSession SOAPReachability]){
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"暂无网络，请检查网络设置"];
        sender.enabled = YES;
        return;
    }
    
    //省非空校验
    if ([_cityLabel.text isEqualToString:@""] || _cityLabel.text == nil) {
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"未选取省份信息"];
        //按钮可以点击
        sender.enabled = YES;
        return;
    }
    
    //收货人
    if ([_userName.text isEqualToString:@""] || _userName.text == nil) {
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"必填收货人名字"];
        //按钮可以点击
        sender.enabled = YES;
        return;
    }
    
    //电话号码
    if ([_phoneNumber.text isEqualToString:@""] || _phoneNumber.text == nil) {
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"必填收货人电话号码"];
        //按钮可以点击
        sender.enabled = YES;
        return;
    }
    
    //详细地址
    if ([_detialLocationField.text isEqualToString:@""] || _detialLocationField.text == nil) {
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"需要填写详细地址"];
        //按钮可以点击
        sender.enabled = YES;
        return;
    }
    
    // 验证手机号码
    if (![SmallFunctionTool checkTelNumber:_phoneNumber.text]) {
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"手机号码格式错误"];
        //按钮可以点击
        sender.enabled = YES;
        return;
    }
    
    //请求Java
    NSString *addressString = [NSString stringWithFormat:@"%@%@", _cityLabel.text, _detialLocationField.text];
    NSString *isdefault = isDefault ? @"1" : @"0";
    NSDictionary *dic;
    NSString *urlString;
    if (_address == nil) {
        urlString = @"appaddAddress";   // 添加地址
        dic = @{@"phone" : userInfo.phone,                 // 电话
                @"address" : addressString,                // 地址串
                @"isdefault" : isdefault,                  // 是否默认
                @"recipientName" : _userName.text,         // 名字
                @"recipientPhone" : _phoneNumber.text      // 电话
            };
    } else {
        urlString = @"appupdateAddress";// 修改地址
        dic = @{@"id" : _address.addressID,                // 地址id
                @"phone" : userInfo.phone,                 // 电话
                @"address" : addressString,                // 地址串
                @"isdefault" : isdefault,                  // 是否默认
                @"recipientName" : _userName.text,         // 名字
                @"recipientPhone" : _phoneNumber.text      // 电话
                };
    }
    
    //显示风火轮
    [smallFunc createActivityIndicator:self.view AndKey:@"HMYGEditAddressViewController"];
    
    [SOAPUrlSession AFHTTPSessionManager:urlString parameter:dic success:^(id responseObject) {
        
        if ([responseObject[@"msg"] isEqualToString:@"success"]) {
            //主线程更新视图
            dispatch_async(dispatch_get_main_queue(), ^{
                FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                [showMessage showAlertWith:@"添加地址成功"];
                [self.navigationController popViewControllerAnimated:YES];
                
            });

        } else {
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWith:@"添加地址失败"];
        }
        
        //停止风火轮
        [smallFunc stopActivityIndicator:@"HMYGEditAddressViewController"];
        
    } failure:^(NSError *error) {
        
        //停止风火轮
        [smallFunc stopActivityIndicator:@"HMYGEditAddressViewController"];
        
        //后台连接直接不成功，弹出“连接服务器失败”
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"网络异常：连接服务器失败"];
        
        
    }];
        
    
}

// 选择城市
- (IBAction)selectCity:(id)sender {
    
    [[[UIApplication sharedApplication] keyWindow] endEditing:YES];
    
    //设置提示的Tip，第一次打开都是“选择城市”
    selectView.labelSelectTip.text = @"选择城市";
    
    //设置标志位
    addressFlag = 0;
    
    //弹出tableview
    [UIView animateWithDuration:0.5 animations:^{
        
        selectView.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
        
        //刷新数据
        [selectView.selTableView reloadData];
        
        dispatch_async(dispatch_get_main_queue(), ^{
            //滚动到第一行
            NSIndexPath *indexpath = [NSIndexPath indexPathForRow:0 inSection:0];
            [selectView.selTableView scrollToRowAtIndexPath:indexpath atScrollPosition:UITableViewScrollPositionNone animated:YES];
        });
    }];
    
}

// 选着街道
- (IBAction)selectAddress:(id)sender {
    
    
}





#pragma mark - 城市选择
//选择的tableview的返回按钮操作
- (void)allGoBackOperation:(UIButton *)sender {
    
    //根据indexFlag，判断数据源
    if (addressFlag == 0) { //省份
        
        dispatch_async(dispatch_get_main_queue(), ^{
            
            //显示所选城市
            if ([county isEqualToString:@""] || county == nil || [city isEqualToString:@""] || city == nil || [province isEqualToString:@""] || province == nil) {
                
                if ([userInfo.CityName isEqualToString:@""] || userInfo.CityName == nil) {
                    _cityLabel.text = @"选择";
                }else
                {
                    if ([userInfo.CountyName isEqualToString:@""] || userInfo.CountyName == nil) {
                        _cityLabel.text = [NSString stringWithFormat:@"%@%@",userInfo.ProvinceName,userInfo.CityName];
                    } else {
                        _cityLabel.text = [NSString stringWithFormat:@"%@%@%@",userInfo.ProvinceName,userInfo.CityName,userInfo.CountyName];
                    }
                }
                
                //清除省份、城市和区县的数据
                province = nil;
                provinceCode = nil;
                cityCode = nil;
                city = nil;
                countyCode = nil;
                county = nil;
                
            } else {
                _cityLabel.text = [NSString stringWithFormat:@"%@%@%@ ",province,city,county];
            }
            
            //标志位改成0
            addressFlag = 0;
            
            //直接收起tableview
            [UIView animateWithDuration:0.5 animations:^{
                
                selectView.frame = CGRectMake(0, SCREEN_HEIGHT, SCREEN_WIDTH, SCREEN_HEIGHT);
            }];
        });
        
    } else if (addressFlag == 1) { //城市
        
        dispatch_async(dispatch_get_main_queue(), ^{
            //更新提示的tip
            selectView.labelSelectTip.text = [NSString stringWithFormat:@"选择城市"];
            
            //更新市区和区县的数据源
            [self updateAllDataSource:provinceCode andCityCode:nil];
            
            //刷新tableview数据源
            addressFlag = 0;
            [selectView.selTableView reloadData];
            
            //清除城市和区县的数据
            cityCode = nil;
            city = nil;
            countyCode = nil;
            county = nil;
        });
        
        
    } else if (addressFlag == 2) { //区县
        
        dispatch_async(dispatch_get_main_queue(), ^{
            //更新提示的tip
            selectView.labelSelectTip.text = [NSString stringWithFormat:@"%@",province];
            
            //更新市区和区县的数据源
            [self updateAllDataSource:provinceCode andCityCode:cityCode];
            
            //刷新tableview数据源
            addressFlag = 1;
            [selectView.selTableView reloadData];
            
            //清除区县的数据
            countyCode = nil;
            county = nil;
            
        });
        
    }
    
}

//更新所有的省市区的数据源，没有对应的参数就直接给nil
- (void)updateAllDataSource:(NSString *)upProvinceCode andCityCode:(NSString *)upCityCode {
    
    //省份和城市都传空
    if (upProvinceCode == nil && upCityCode == nil) {
        //设置默认的城市和区县的数据源
        NSArray *newKeys = [provinceDic.allKeys sortedArrayUsingComparator:^NSComparisonResult (NSString *str1, NSString *str2) {
            return [str1 compare:str2];
        }];
        NSString *proCode = newKeys[0];
        
        cityDic = [NSMutableDictionary dictionaryWithDictionary:[SmallFunctionTool haveAllCity:proCode]];
        NSArray *newKeys2 = [cityDic.allKeys sortedArrayUsingComparator:^NSComparisonResult (NSString *str1, NSString *str2) {
            return [str1 compare:str2];
        }];
        NSString *citCode = newKeys2[0];
        
        countyDic = [NSMutableDictionary dictionaryWithDictionary:[SmallFunctionTool haveAllCounty:citCode]];
        
    }
    
    //传了省份，没有传城市
    if (upProvinceCode != nil && upCityCode == nil) {
        
        cityDic = [NSMutableDictionary dictionaryWithDictionary:[SmallFunctionTool haveAllCity:upProvinceCode]];
        NSArray *newKeys2 = [cityDic.allKeys sortedArrayUsingComparator:^NSComparisonResult (NSString *str1, NSString *str2) {
            return [str1 compare:str2];
        }];
        NSString *citCode = newKeys2[0];
        
        countyDic = [NSMutableDictionary dictionaryWithDictionary:[SmallFunctionTool haveAllCounty:citCode]];
        
    }
    
    //传了省份和城市
    if (upProvinceCode != nil && upCityCode != nil) {
        
        cityDic = [NSMutableDictionary dictionaryWithDictionary:[SmallFunctionTool haveAllCity:upProvinceCode]];
        
        countyDic = [NSMutableDictionary dictionaryWithDictionary:[SmallFunctionTool haveAllCounty:upCityCode]];
        
    }
    
}



#pragma mark - tableview的委托协议

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    //根据indexFlag，判断数据源
    if (addressFlag == 0) {
        //省份
        return provinceDic.count;
    } else if (addressFlag == 1) {
        //城市
        return cityDic.count;
    } else if (addressFlag == 2) {
        //区县
        return countyDic.count;
    } else {
        return 0;
    }
    
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    static NSString *cellID= @"SelectDetailCell";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellID];
    
    if (cell == nil) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:cellID];
    }
    
    //需要显示的label
    NSString *labelStr = @"未设置";
    
    //根据indexFlag，判断数据源
    if (addressFlag == 0) { //省份
        //先根据后台id排序
        NSArray *newKeys = [provinceDic.allKeys sortedArrayUsingComparator:^NSComparisonResult (NSString *str1, NSString *str2) {
            return [str1 compare:str2];
        }];
        
        //省份编码
        NSString *proCode = newKeys[indexPath.row];
        //省份名称
        labelStr = provinceDic[proCode];
        
    } else if (addressFlag == 1) { //城市
        //先根据后台id排序
        NSArray *newKeys2 = [cityDic.allKeys sortedArrayUsingComparator:^NSComparisonResult (NSString *str1, NSString *str2) {
            return [str1 compare:str2];
        }];
        
        //市区编码
        NSString *citCode = newKeys2[indexPath.row];
        //市区名称
        labelStr = cityDic[citCode];
        
    } else if (addressFlag == 2) { //区县
        //先根据后台id排序
        NSArray *newKeys3 = [countyDic.allKeys sortedArrayUsingComparator:^NSComparisonResult (NSString *str1, NSString *str2) {
            return [str1 compare:str2];
        }];
        
        NSString *couCode = newKeys3[indexPath.row];
        //县区名称
        labelStr = countyDic[couCode];
        
    }
    
    //设置显示的内容
    cell.textLabel.text = labelStr;
    
    return cell;
    
}

//tableview点击操作，根据标志位去判断
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    //解决在push，back回来之后，当前cell仍然是选中的状态
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    //根据indexFlag，判断数据源
    if (addressFlag == 0) { //省份
        //先根据后台id排序
        NSArray *newKeys = [provinceDic.allKeys sortedArrayUsingComparator:^NSComparisonResult (NSString *str1, NSString *str2) {
            return [str1 compare:str2];
        }];
        
        //省份编码
        provinceCode = newKeys[indexPath.row];
        //省份名称
        province = provinceDic[provinceCode];
        
        //更新提示的tip
        selectView.labelSelectTip.text = [NSString stringWithFormat:@"%@",province];
        
        //更新市区和区县的数据源
        [self updateAllDataSource:provinceCode andCityCode:nil];
        
        //刷新tableview数据源
        addressFlag = 1;
        [selectView.selTableView reloadData];
        
    } else if (addressFlag == 1) { //城市
        //先根据后台id排序
        NSArray *newKeys2 = [cityDic.allKeys sortedArrayUsingComparator:^NSComparisonResult (NSString *str1, NSString *str2) {
            return [str1 compare:str2];
        }];
        //市区编码
        cityCode = newKeys2[indexPath.row];
        //市区名称
        city = cityDic[cityCode];
        
        
        //更新提示的tip
        selectView.labelSelectTip.text = [NSString stringWithFormat:@"%@%@",province,city];
        
        //更新市区和区县的数据源
        [self updateAllDataSource:provinceCode andCityCode:cityCode];
        
        //刷新tableview数据源
        addressFlag = 2;
        [selectView.selTableView reloadData];
        
    } else if (addressFlag == 2) { //区县
        //先根据后台id排序
        NSArray *newKeys3 = [countyDic.allKeys sortedArrayUsingComparator:^NSComparisonResult (NSString *str1, NSString *str2) {
            return [str1 compare:str2];
        }];
        //县区编码
        countyCode = newKeys3[indexPath.row];
        //县区名称
        county = countyDic[countyCode];
        
        //显示所选城市
        _cityLabel.text = [NSString stringWithFormat:@"%@%@%@",province,city,county];
        //标志位改成0
        addressFlag = 0;
        
        
        //选择后直接返回，收起tableview
        [UIView animateWithDuration:0.5 animations:^{
            
            selectView.frame = CGRectMake(0, SCREEN_HEIGHT, SCREEN_WIDTH, SCREEN_HEIGHT);
        }];
        
    }
    
}





















@end
