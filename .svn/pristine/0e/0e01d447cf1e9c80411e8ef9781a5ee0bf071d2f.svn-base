//
//  HMYGMyOrderRecordViewController.m
//  LFBaseFrameTwo
//
//  Created by maco on 2017/4/11.
//  Copyright © 2017年 admin. All rights reserved.
//

#import "HMYGMyOrderRecordViewController.h"
#import "HMYGMyOrderGoodsCell.h"
#import "HMYGShouHouOrderCell.h"
#import "HMYGMyOrderHeadCell.h"
#import "HMYGMyOrderFootCell.h"
#import "HMYGOrderDetailViewController.h"
#import "HMYGOrderModel.h"
#import "HMYGGoodsModel.h"
#import "ZGOrderModel.h"
#import "ZGMyOrderDetailViewController.h"
#import "ZGSendCommentViewController.h"
#import "RechargeFinishShowAlertViewController.h"
#import "LFNavigationController.h"
#import <UIImageView+WebCache.h>
#import <MJRefresh.h>

#import "WXApiManager.h"
#import "WXApi.h"
#import "Order.h"
#import <AlipaySDK/AlipaySDK.h>
#import "AlipayCallbackManager.h"
#import "DataSigner.h"
#import "DataVerifier.h"

// 刷新通知
#define RefreshOrderData @"RefreshOrderData"

@interface HMYGMyOrderRecordViewController ()<UITableViewDelegate, UITableViewDataSource, AlipayCallbackDelegate, WXApiManagerDelegate> {

    //用户信息单例
    UserInformation *userInfo;
    
    //工具方法单例
    SmallFunctionTool *smallFunc;
    
    // 当前页数
    NSInteger currentPage;
    
    // 数据数组
    NSMutableArray *dataArray;

}

@property (nonatomic, strong)UITableView *myTableView;

@end

@implementation HMYGMyOrderRecordViewController

- (instancetype)initWithType:(NSString *)type
{
    if (self = [super init]) {
        self.type = type;   // 控制器的的类型  0全部 1待付款 2待发货 3待收货 4待退款

    }
    return self;
}



- (void)viewDidLoad {
    [super viewDidLoad];
    
    //初始化
    userInfo = [UserInformation sharedInstance];
    smallFunc = [SmallFunctionTool sharedInstance];
    currentPage = 0;
    dataArray = [NSMutableArray array];
    
    
    [self prepareUI];
    
    //将AlipayCallbackDelegate委托协议的委托对象赋值给当前的view，
    //由于AlipayCallbackManager是单例对象，因此委托对象将只有这一个，这样在AppDelegate中执行委托方法将能够定位到当前的view来
    [AlipayCallbackManager sharedManager].delegate = self;
    
    //注册微信支付的AppID
    [WXApi registerApp:@"wx74425f5021cc397b" withDescription:@"WeiXinPay"];
    [WXApiManager sharedManager].delegate = self;
    
    // 监听刷新通知
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(refreshOrderData) name:RefreshOrderData object:nil];
    
    
}



- (void)viewWillAppear:(BOOL)animated {

    [super viewWillAppear:animated];
    
    [self getOrderData:NO];

}

- (void)viewWillDisappear:(BOOL)animated {


    [super viewWillDisappear:animated];
    
    [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
}


- (void)prepareUI
{
    
    _myTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT - 104) style:UITableViewStyleGrouped];
    _myTableView.delegate = self;
    _myTableView.dataSource = self;
    _myTableView.bounces = YES;
    _myTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    _myTableView.showsVerticalScrollIndicator = NO;
    _myTableView.backgroundColor = [UIColor clearColor];
    
    [_myTableView registerNib:[UINib nibWithNibName:@"HMYGMyOrderGoodsCell" bundle:nil] forCellReuseIdentifier:@"HMYGMyOrderGoodsCell"];
    [_myTableView registerNib:[UINib nibWithNibName:@"HMYGShouHouOrderCell" bundle:nil] forCellReuseIdentifier:@"HMYGShouHouOrderCell"];
    [_myTableView registerNib:[UINib nibWithNibName:@"HMYGMyOrderHeadCell" bundle:nil] forCellReuseIdentifier:@"HMYGMyOrderHeadCell"];
    [_myTableView registerNib:[UINib nibWithNibName:@"HMYGMyOrderFootCell" bundle:nil] forCellReuseIdentifier:@"HMYGMyOrderFootCell"];
    [self.view addSubview:self.myTableView];
    
    MJRefreshNormalHeader *header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        
        [self getOrderData:NO];
        
        //关闭刷新
        [_myTableView.mj_header endRefreshing];
    }];
    header.stateLabel.font = [UIFont systemFontOfSize:12];
    header.lastUpdatedTimeLabel.font = [UIFont systemFontOfSize:11];
    _myTableView.mj_header = header;
    
    MJRefreshAutoNormalFooter *footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{
        
        [self getOrderData:YES];
        
        //关闭刷新
        [_myTableView.mj_footer endRefreshing];
    }];
    footer.automaticallyHidden = YES;//自动根据有无数据来显示和隐藏
    footer.stateLabel.font = [UIFont systemFontOfSize:12];
    _myTableView.mj_footer = footer;
    
    
}


- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return dataArray.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
//    if ([_type isEqualToString:@"4"]) {
//        return 1;
//    } else {
//    }
    if (dataArray.count == 0) {
        return 0;
    }
    ZGOrderModel *model = dataArray[section];
    return model.goodsArray.count + 2;
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    // 售后
//    if ([_type isEqualToString:@"4"]) {
//        return 125;
//    } else {
//    }
    if (indexPath.row == 0) {
        return 40;
    }else if (indexPath.row == 3){
        return 80;
    }else{
        return 90;
    }
    
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 10;
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if (dataArray.count == 0) {
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"HMYGShouHouOrderCell"];
        return cell;
    }
    
    ZGOrderModel *model = dataArray[indexPath.section];
    
    // 如果是待退款
//    if ([_type isEqualToString:@"4"]) {
//        HMYGShouHouOrderCell *SHCell = [tableView dequeueReusableCellWithIdentifier:@"HMYGShouHouOrderCell" forIndexPath:indexPath];
//        
//        // 订单编号
//        SHCell.orderNumberLabel.text = [NSString stringWithFormat:@"订单编号:%@", model.order_Account];
//        
//        // 图
//        NSDictionary *dic = [model.goodsArray firstObject];
//        NSString *path = [NSString stringWithFormat:@"%@%@", Java_Image_URL, dic[@"pictureURL"]];
//        [SHCell.iconImageView sd_setImageWithURL:[NSURL URLWithString:path]
//                               placeholderImage:[UIImage imageNamed:@"defaultHead"]
//                                        options:SDWebImageRetryFailed];
//        
//        // 时间
//        SHCell.dateLabel.text = [NSString stringWithFormat:@"%@", model.update_time];
//        
//        // 退款编号
//        SHCell.backOrderNumberLabel.text = [NSString stringWithFormat:@"%@", model.order_Account];
//        
//        // 退款金额
//        float price = 0;
//        for (NSDictionary *dic in model.goodsArray) {
//            
//            price += [dic[@"commodity_price"] floatValue] * [dic[@"count"] integerValue];
//            
//        }
//        SHCell.backMoneyLabel.text = [NSString stringWithFormat:@"退款金额:￥%.2f", price];
//        
//        // 退款状态
//        if ([model.order_state isEqualToString:@"4"]) {
//            SHCell.backStatusLabel.text = [NSString stringWithFormat:@"已评价"];
//        } else if ([model.order_state isEqualToString:@"5"]) {
//            SHCell.backStatusLabel.text = [NSString stringWithFormat:@"待退款"];
//        } else if ([model.order_state isEqualToString:@"6"]) {
//            SHCell.backStatusLabel.text = [NSString stringWithFormat:@"退款中"];
//        } else if ([model.order_state isEqualToString:@"7"]) {
//            SHCell.backStatusLabel.text = [NSString stringWithFormat:@"退款成功"];
//        } else if ([model.order_state isEqualToString:@"8"]) {
//            SHCell.backStatusLabel.text = [NSString stringWithFormat:@"退款失败"];
//        } else {
//            SHCell.backStatusLabel.text = [NSString stringWithFormat:@"未知"];
//        }
//        
//        return SHCell;
//        
//    } else {
        // 头部
        if (indexPath.row == 0) {
            HMYGMyOrderHeadCell *headCell = [tableView dequeueReusableCellWithIdentifier:@"HMYGMyOrderHeadCell" forIndexPath:indexPath];
            
            // 订单编号
            headCell.orderNumberLabel.text = [NSString stringWithFormat:@"订单编号：%@", model.order_Account];
            
            // 订单状态
            // (-1:全部 0：待付款；1：待发货；2：待收货；3:待评价；4：已评价 5:待退款 6:退款中 7:退款成功 8:退款失败)
            if ([model.order_state isEqualToString:@"0"]) {
                headCell.statusLabel.text = @"待付款";
            } else if ([model.order_state isEqualToString:@"1"]) {
                headCell.statusLabel.text = @"待发货";
            } else if ([model.order_state isEqualToString:@"2"]) {
                headCell.statusLabel.text = @"待收货";
            } else if ([model.order_state isEqualToString:@"3"]) {
                headCell.statusLabel.text = @"待评价";
            } else if ([model.order_state isEqualToString:@"4"]) {
                headCell.statusLabel.text = @"已评价";
            } else if ([model.order_state isEqualToString:@"5"]) {
                headCell.statusLabel.text = @"待退款";
            } else if ([model.order_state isEqualToString:@"6"]) {
                headCell.statusLabel.text = @"退款中";
            } else if ([model.order_state isEqualToString:@"7"]) {
                headCell.statusLabel.text = @"退款成功";
            } else if ([model.order_state isEqualToString:@"8"]) {
                headCell.statusLabel.text = @"退款失败";
            } else {
                headCell.statusLabel.text = @"未知订单";
            }
            
            
            return headCell;
            
            // 尾部
        } else if (indexPath.row == model.goodsArray.count + 1) {
            HMYGMyOrderFootCell *footCell = [tableView dequeueReusableCellWithIdentifier:@"HMYGMyOrderFootCell" forIndexPath:indexPath];
            
            float price = 0;
            for (NSDictionary *dic in model.goodsArray) {
                
                price += [dic[@"commodity_price"] floatValue] * [dic[@"count"] integerValue];
                
            }
            footCell.totalLabel.text = [NSString stringWithFormat:@"￥%.2f", price - [model.integral floatValue]];
            
            // 设置左右按钮
            // (-1:全部 0：待付款；1：待发货；2：待收货；3:待评价；4：已评价 5:待退款 6:退款中 7:退款成功 8:退款失败)
            if ([model.order_state isEqualToString:@"0"]) {
                // 待付款
                [footCell.leftButton setTitle:@"删除订单" forState:UIControlStateNormal];
                [footCell.rightButton setTitle:@"付款" forState:UIControlStateNormal];
                [footCell.leftButton addTarget:self action:@selector(buttonAction:) forControlEvents:UIControlEventTouchUpInside];
                [footCell.rightButton addTarget:self action:@selector(buttonAction:) forControlEvents:UIControlEventTouchUpInside];
                footCell.leftButton.tag = indexPath.section + 300;
                footCell.rightButton.tag = indexPath.section + 400;
                footCell.leftButton.hidden = NO;
                footCell.rightButton.hidden = NO;
                
            } else if ([model.order_state isEqualToString:@"1"]) {
                // 待发货
                footCell.leftButton.hidden = YES;
                [footCell.rightButton setTitle:@"提醒发货" forState:UIControlStateNormal];
                [footCell.rightButton addTarget:self action:@selector(buttonAction:) forControlEvents:UIControlEventTouchUpInside];
                footCell.rightButton.tag = indexPath.section + 400;
                footCell.rightButton.hidden = NO;
                
            } else if ([model.order_state isEqualToString:@"2"]) {
                // 待收货
                footCell.leftButton.hidden = YES;
                [footCell.rightButton setTitle:@"确认收货" forState:UIControlStateNormal];
                [footCell.rightButton addTarget:self action:@selector(buttonAction:) forControlEvents:UIControlEventTouchUpInside];
                footCell.rightButton.tag = indexPath.section + 400;
                footCell.rightButton.hidden = NO;
                
            } else if ([model.order_state isEqualToString:@"3"]) {
                // 待评价
                [footCell.leftButton setTitle:@"申请退款" forState:UIControlStateNormal];
                [footCell.rightButton setTitle:@"评价" forState:UIControlStateNormal];
                [footCell.leftButton addTarget:self action:@selector(buttonAction:) forControlEvents:UIControlEventTouchUpInside];
                [footCell.rightButton addTarget:self action:@selector(buttonAction:) forControlEvents:UIControlEventTouchUpInside];
                footCell.leftButton.tag = indexPath.section + 300;
                footCell.rightButton.tag = indexPath.section + 400;
                footCell.leftButton.hidden = NO;
                footCell.rightButton.hidden = NO;
                
            } else if ([model.order_state isEqualToString:@"4"]) {
                // 已评价
                footCell.rightButton.hidden = YES;
                footCell.leftButton.hidden = NO;
                [footCell.leftButton setTitle:@"申请退款" forState:UIControlStateNormal];
                [footCell.leftButton addTarget:self action:@selector(buttonAction:) forControlEvents:UIControlEventTouchUpInside];
                footCell.leftButton.tag = indexPath.section + 300;
                
            } else if ([model.order_state isEqualToString:@"8"]) {
                // 退款失败
                footCell.leftButton.hidden = YES ;
                [footCell.rightButton setTitle:@"联系客服" forState:UIControlStateNormal];
                [footCell.rightButton addTarget:self action:@selector(buttonAction:) forControlEvents:UIControlEventTouchUpInside];
                footCell.rightButton.hidden = NO;
            } else {
                footCell.leftButton.hidden = YES;
                footCell.rightButton.hidden = YES;
            }
            
            
            
            return footCell;
            // 显示商品
        } else {
            
            HMYGMyOrderGoodsCell *goodsCell = [tableView dequeueReusableCellWithIdentifier:@"HMYGMyOrderGoodsCell" forIndexPath:indexPath];
            NSDictionary *dic = model.goodsArray[indexPath.row - 1];
            goodsCell.nameLabel.text = [NSString stringWithFormat:@"%@", dic[@"cmdName"]];
            goodsCell.cmdClassLabel.text = [NSString stringWithFormat:@"%@", dic[@"cmdClass"]];
            goodsCell.countsLabel.text = [NSString stringWithFormat:@"x%@", dic[@"count"]];
            goodsCell.silverLabel.text = [NSString stringWithFormat:@"￥%@", dic[@"commodity_price"]];
            
            NSString *path = [NSString stringWithFormat:@"%@%@", Java_Image_URL, dic[@"pictureURL"]];
            [goodsCell.iconImageView sd_setImageWithURL:[NSURL URLWithString:path]
                                   placeholderImage:[UIImage imageNamed:@"defaultHead"]
                                            options:SDWebImageRetryFailed];
            
            return goodsCell;
            
        }
//    }
    
    
    
}


- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    if (dataArray.count == 0) {
        return;
    }
    
    ZGOrderModel *model = dataArray[indexPath.section];
    
    // 查看订单详情
    ZGMyOrderDetailViewController *ctrl = [[ZGMyOrderDetailViewController alloc] init];
    ctrl.order_Account = model.order_Account;
    [self.navigationController pushViewController:ctrl animated:YES];
}

#pragma mark - 点击了评价售后确认收货等按钮的响应
- (void)buttonAction:(UIButton *)button {
    
    if ([button.titleLabel.text isEqualToString:@"删除订单"]) {
        
        // 弹框提示是否执行
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil
                                                                       message:@"确定删除订单？"
                                                                preferredStyle:UIAlertControllerStyleAlert];
        
        [alert addAction:[UIAlertAction actionWithTitle:@"取消"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                }]];
        [alert addAction:[UIAlertAction actionWithTitle:@"确定"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                    ZGOrderModel *model = dataArray[button.tag - 300];
                                                    
                                                    //请求Java
                                                    NSDictionary *dic = @{@"order_Account" : model.order_Account    // 订单编号
                                                                          };
                                                    
                                                    //显示风火轮
                                                    [smallFunc createActivityIndicator:self.view AndKey:@"HMYGMyOrderRecordViewController"];
                                                    
                                                    [SOAPUrlSession AFHTTPSessionManager:@"appdeleteOrder" parameter:dic success:^(id responseObject) {
                                                        
                                                        if ([responseObject[@"msg"] isEqualToString:@"success"]) {
                                                            [[NSNotificationCenter defaultCenter] postNotificationName:RefreshOrderData
                                                                                                                object:nil];
                                                        }
                                                        
                                                        //停止风火轮
                                                        [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
                                                        
                                                    } failure:^(NSError *error) {
                                                        
                                                        //停止风火轮
                                                        [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
                                                        //后台连接直接不成功，弹出“连接服务器失败”
                                                        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                                                        [showMessage showAlertWith:@"网络异常：连接服务器失败"];
                                                    }];
                                                    
                                                }]];
        
        [self presentViewController:alert animated:YES completion:nil];
        
        
    } else if ([button.titleLabel.text isEqualToString:@"付款"]) {
        
        ZGOrderModel *model = dataArray[button.tag - 400];
    
        // 弹框提示是否执行
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil
                                                                       message:@"是否支付订单？"
                                                                preferredStyle:UIAlertControllerStyleAlert];
        
        [alert addAction:[UIAlertAction actionWithTitle:@"取消"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                    
                                                }]];
        [alert addAction:[UIAlertAction actionWithTitle:@"确定"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                    [self payOrderAction:model];
                                                    
                                                }]];
        [self presentViewController:alert animated:YES completion:nil];
        
    } else if ([button.titleLabel.text isEqualToString:@"确认收货"]) {
        
        ZGOrderModel *model = dataArray[button.tag - 400];
        
        // 弹框提示是否执行
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil
                                                                       message:@"是否确认收货？"
                                                                preferredStyle:UIAlertControllerStyleAlert];
        
        [alert addAction:[UIAlertAction actionWithTitle:@"取消"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                    
                                                }]];
        [alert addAction:[UIAlertAction actionWithTitle:@"确定"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                    [self makeSureOrder:model];
                                                    
                                                }]];
        [self presentViewController:alert animated:YES completion:nil];
        
    } else if ([button.titleLabel.text isEqualToString:@"评价"]) {
        
        if (dataArray.count == 0) {
            return;
        }
        ZGOrderModel *model = dataArray[button.tag - 400];
        
        ZGSendCommentViewController *ctrl = [[ZGSendCommentViewController alloc] init];
        ctrl.orderModel = model;
        [self.navigationController pushViewController:ctrl animated:YES];
        
    } else if ([button.titleLabel.text isEqualToString:@"申请退款"]) {
    
        ZGOrderModel *model = dataArray[button.tag - 300];
        
        // 弹框提示是否执行
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil
                                                                       message:@"是否申请退款？"
                                                                preferredStyle:UIAlertControllerStyleAlert];
        
        [alert addAction:[UIAlertAction actionWithTitle:@"取消"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                    
                                                }]];
        [alert addAction:[UIAlertAction actionWithTitle:@"确定"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                    [self applyBackOrder:model];
                                                    
                                                }]];
        [self presentViewController:alert animated:YES completion:nil];
        
    } else if ([button.titleLabel.text isEqualToString:@"联系客服"]) {
        
        // 弹框提示是否执行
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"拨打客服电话？"
                                                                       message:@"10086"
                                                                preferredStyle:UIAlertControllerStyleAlert];
        
        [alert addAction:[UIAlertAction actionWithTitle:@"取消"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                    
                                                }]];
        [alert addAction:[UIAlertAction actionWithTitle:@"确定"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                    [[UIApplication sharedApplication] openURL:[NSURL URLWithString:@"tel://10086"]];
                                                    
                                                }]];
        [self presentViewController:alert animated:YES completion:nil];
        
    } else if ([button.titleLabel.text isEqualToString:@"提醒发货"]) {
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"已发送提醒"];
    }
    
}

#pragma mark - 支付订单
- (void)payOrderAction:(ZGOrderModel *)model {
    
    // 如果使用了积分，那么要输入密码
    if ([model.integral integerValue] > 0) {
        // 弹框提示是否执行
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"此订单使用了积分抵扣"
                                                                       message:@"请输入通宝账号密码"
                                                                preferredStyle:UIAlertControllerStyleAlert];
        
        // 创建文本框
        [alert addTextFieldWithConfigurationHandler:^(UITextField *textField){
            textField.placeholder = @"请输入您的密码";
            textField.secureTextEntry = YES;
        }];
        
        [alert addAction:[UIAlertAction actionWithTitle:@"取消"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                    
                                                    
                                                }]];
        [alert addAction:[UIAlertAction actionWithTitle:@"确定"
                                                  style:UIAlertActionStyleDefault
                                                handler:^(UIAlertAction * _Nonnull action) {
                                                    
                                                    UITextField *textField = alert.textFields.firstObject;
                                                    NSString *password = textField.text;
                                                    
                                                    // 显示风火轮
                                                    [smallFunc createActivityIndicator:self.view AndKey:@"HMYGMyOrderRecordViewController"];
                                                    
                                                    float price = 0;
                                                    for (NSDictionary *dic in model.goodsArray) {
                                                        
                                                        price += [dic[@"commodity_price"] floatValue] * [dic[@"count"] integerValue];
                                                        
                                                    }
                                                    NSString *priceTotal = [NSString stringWithFormat:@"%.2f", price];
                                                    
                                                    //请求Java
                                                    NSDictionary *dic = @{@"phone" : userInfo.phone,            // 手机号
                                                                          @"code" : model.order_Account,        // 订单号
                                                                          @"money" : priceTotal,                // 总金额
                                                                          @"payType" : model.paymentMethod,     // 支付方式 （0：支付宝 1：微信 2：余额）
                                                                          @"userIntegral" : model.integral,     // 消耗积分
                                                                          @"deviceType" : @"0",                 // 设备类型 （0：iOS   1：Andriod）
                                                                          @"userIntegralPW" : password};        // 消耗积分时输入的密码
                                                    [SOAPUrlSession AFHTTPSessionManager:@"userLogin/userPayment" parameter:dic success:^(id responseObject) {
                                                        
                                                        if ([responseObject[@"msg"] isEqualToString:@"success"]) {
                                                            
                                                            if ([model.paymentMethod isEqualToString:@"0"]) {
                                                                
                                                                // 支付宝支付
                                                                NSString *NotifyUrl = [NSString stringWithFormat:@"%@%@", Java_URL, responseObject[@"NotifyUrl"]];
                                                                NSString *PrivateKey = [NSString stringWithFormat:@"%@", responseObject[@"PrivateKey"]];
                                                                NSString *SerialNumber = [NSString stringWithFormat:@"%@", responseObject[@"SerialNumber"]];
                                                                NSString *SettlementMoney = [NSString stringWithFormat:@"%@", responseObject[@"SettlementMoney"]];
                                                                
                                                                [self payWithAliPayURL:NotifyUrl pkey:PrivateKey serial:SerialNumber money:SettlementMoney];
                                                                
                                                            } else if ([model.paymentMethod isEqualToString:@"1"]) {
                                                                
                                                                // 微信支付
                                                                //拼接微信支付所需的参数
                                                                PayReq* req     = [[PayReq alloc] init];
                                                                req.partnerId   = responseObject[@"date"][@"partnerid"];
                                                                req.prepayId    = responseObject[@"date"][@"prepayid"];
                                                                req.nonceStr    = responseObject[@"date"][@"noncestr"];
                                                                NSString *string = [NSString stringWithFormat:@"%@", responseObject[@"date"][@"timestamp"]];
                                                                req.timeStamp   = [string intValue];
                                                                req.package     = @"Sign=WXPay";
                                                                req.sign        = responseObject[@"date"][@"sign"];
                                                                
                                                                //发起微信支付请求
                                                                [WXApi sendReq:req];
                                                                
                                                                //将从后台获取的订单信息中的金额保存起来
                                                                [WXApiManager sharedManager].rechargeMoney = [NSString stringWithFormat:@"%.2f", [priceTotal floatValue] - [model.integral floatValue]];
                                                                
                                                            } else {
                                                                
                                                                // 余额支付
                                                                dispatch_async(dispatch_get_main_queue(), ^{
                                                                    
                                                                    [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
                                                                    
                                                                    [[NSNotificationCenter defaultCenter] postNotificationName:RefreshOrderData
                                                                                                                        object:nil];
                                                                    
                                                                    FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                                                                    [showMessage showAlertWith:@"支付成功"];
                                                                    [self.navigationController popViewControllerAnimated:YES];
                                                                    
                                                                });
                                                            }
                                                            
                                                        } else {
                                                            [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
                                                            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                                                            [showMessage showAlertWith:@"购买失败"];
                                                        }
                                                        
                                                    } failure:^(NSError *error) {
                                                        //后台连接直接不成功，弹出“连接服务器失败”
                                                        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                                                        [showMessage showAlertWith:@"网络异常：连接服务器失败"];
                                                        [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
                                                    }];
                                                }]];
        
        [self presentViewController:alert animated:YES completion:nil];
    
    } else {
        // 显示风火轮
        [smallFunc createActivityIndicator:self.view AndKey:@"HMYGMyOrderRecordViewController"];
        
        float price = 0;
        for (NSDictionary *dic in model.goodsArray) {
            
            price += [dic[@"commodity_price"] floatValue] * [dic[@"count"] integerValue];
            
        }
        NSString *priceTotal = [NSString stringWithFormat:@"%.2f", price];
        
        //请求Java
        NSDictionary *dic = @{@"phone" : userInfo.phone,            // 手机号
                              @"code" : model.order_Account,        // 订单号
                              @"money" : priceTotal,                // 总金额
                              @"payType" : model.paymentMethod,     // 支付方式 （0：支付宝 1：微信 2：余额）
                              @"userIntegral" : model.integral,     // 消耗积分
                              @"deviceType" : @"0",                 // 设备类型 （0：iOS   1：Andriod）
                              @"userIntegralPW" : @""};             // 消耗积分时输入的密码
        [SOAPUrlSession AFHTTPSessionManager:@"userLogin/userPayment" parameter:dic success:^(id responseObject) {
            
            if ([responseObject[@"msg"] isEqualToString:@"success"]) {
                
                if ([model.paymentMethod isEqualToString:@"0"]) {
                    
                    // 支付宝支付
                    NSString *NotifyUrl = [NSString stringWithFormat:@"%@%@", Java_URL, responseObject[@"NotifyUrl"]];
                    NSString *PrivateKey = [NSString stringWithFormat:@"%@", responseObject[@"PrivateKey"]];
                    NSString *SerialNumber = [NSString stringWithFormat:@"%@", responseObject[@"SerialNumber"]];
                    NSString *SettlementMoney = [NSString stringWithFormat:@"%@", responseObject[@"SettlementMoney"]];
                    
                    [self payWithAliPayURL:NotifyUrl pkey:PrivateKey serial:SerialNumber money:SettlementMoney];
                    
                } else if ([model.paymentMethod isEqualToString:@"1"]) {
                    
                    // 微信支付
                    PayReq* req     = [[PayReq alloc] init];
                    req.partnerId   = responseObject[@"date"][@"partnerid"];
                    req.prepayId    = responseObject[@"date"][@"prepayid"];
                    req.nonceStr    = responseObject[@"date"][@"noncestr"];
                    NSString *string = [NSString stringWithFormat:@"%@", responseObject[@"date"][@"timestamp"]];
                    req.timeStamp   = [string intValue];
                    req.package     = @"Sign=WXPay";
                    req.sign        = responseObject[@"date"][@"sign"];
                    
                    //发起微信支付请求
                    [WXApi sendReq:req];
                    
                    //将从后台获取的订单信息中的金额保存起来
                    [WXApiManager sharedManager].rechargeMoney = [NSString stringWithFormat:@"%.2f", [priceTotal floatValue] - [model.integral floatValue]];
                    
                } else {
                    
                    // 余额支付
                    dispatch_async(dispatch_get_main_queue(), ^{
                        
                        [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
                        
                        [[NSNotificationCenter defaultCenter] postNotificationName:RefreshOrderData
                                                                            object:nil];
                        
                        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                        [showMessage showAlertWith:@"支付成功"];
                        [self.navigationController popViewControllerAnimated:YES];
                        
                    });
                }

                
                
                
            } else {
                [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
                FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                [showMessage showAlertWith:@"购买失败"];
            }
            
        } failure:^(NSError *error) {
            //后台连接直接不成功，弹出“连接服务器失败”
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWith:@"网络异常：连接服务器失败"];
            [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
        }];
    }
    
    
    
    
    
}



#pragma mark - 确认收货
- (void)makeSureOrder:(ZGOrderModel *)model {
    
    // 显示风火轮
    [smallFunc createActivityIndicator:self.view AndKey:@"HMYGMyOrderRecordViewController"];

    //请求Java
    NSDictionary *dic = @{
                          @"code" : model.order_Account         // 订单号
                          };
    [SOAPUrlSession AFHTTPSessionManager:@"userLogin/confirmReceipt" parameter:dic success:^(id responseObject) {
        
        if ([responseObject[@"msg"] isEqualToString:@"success"]) {
            //主线程更新视图
            dispatch_async(dispatch_get_main_queue(), ^{
                
                [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
                
                FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                [showMessage showAlertWith:@"确认收货成功"];
                
                [[NSNotificationCenter defaultCenter] postNotificationName:RefreshOrderData
                                                                    object:nil];
                
            });
        } else {
            [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWith:@"确认收货失败"];
        }
        
    } failure:^(NSError *error) {
        //后台连接直接不成功，弹出“连接服务器失败”
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"网络异常：连接服务器失败"];
        [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
    }];

}

#pragma mark - 申请退款
- (void)applyBackOrder:(ZGOrderModel *)model {
    
    // 显示风火轮
    [smallFunc createActivityIndicator:self.view AndKey:@"HMYGMyOrderRecordViewController"];
    
    //请求Java
    NSDictionary *dic = @{
                          @"code" : model.order_Account         // 订单号
                          };
    [SOAPUrlSession AFHTTPSessionManager:@"userLogin/userRefund" parameter:dic success:^(id responseObject) {
        
        if ([responseObject[@"msg"] isEqualToString:@"success"]) {
            //主线程更新视图
            dispatch_async(dispatch_get_main_queue(), ^{
                
                [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
                
                FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                [showMessage showAlertWith:@"申请退款成功"];
                
                [[NSNotificationCenter defaultCenter] postNotificationName:RefreshOrderData
                                                                    object:nil];
            });
        } else {
            [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
            FadeAlertView *showMessage = [[FadeAlertView alloc] init];
            [showMessage showAlertWith:@"申请退款失败"];
        }
        
    } failure:^(NSError *error) {
        //后台连接直接不成功，弹出“连接服务器失败”
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"网络异常：连接服务器失败"];
        [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
    }];
    
}

#pragma mark - 刷新
- (void)refreshOrderData {

    [self getOrderData:NO];

}

#pragma mark - 获取数据
- (void)getOrderData:(BOOL)isFooter {
    
    
    
    if (isFooter) {
        currentPage++;
    } else {
        currentPage = 1;
        [dataArray removeAllObjects];
    }
    
    // 控制器的的类型  0全部 1待付款 2待发货 3待收货 4待退款
    // 订单状态类型(-2:售后 -1:全部 0：待付款；1：待发货；2：待收货；3:待评价；4：已评价 5:待退款 6:退款中 7:退款成功 8:退款失败)
    NSString *order_state;
    if ([_type isEqualToString:@"0"]) {
        order_state = @"-1";
    } else if ([_type isEqualToString:@"1"]) {
        order_state = @"0";
    } else if ([_type isEqualToString:@"2"]) {
        order_state = @"1";
    } else if ([_type isEqualToString:@"3"]) {
        order_state = @"2";
    } else if ([_type isEqualToString:@"4"]) {
        order_state = @"5";
    }
    
//    if (![order_state isEqualToString:@"-1"]) {
//        return;
//    }
    
    //显示风火轮
    [smallFunc createActivityIndicator:self.view AndKey:@"HMYGMyOrderRecordViewController"];
    
    NSDictionary *dic = @{@"phone" : userInfo.phone,
                          @"order_state" : order_state,
                          @"page" : [NSString stringWithFormat:@"%ld", currentPage],
                          @"pageSize" : @"10"};
    [SOAPUrlSession AFHTTPSessionManager:@"appgetOrderList" parameter:dic success:^(id responseObject) {
        
        
        NSArray *list = responseObject[@"list"];
        for (NSDictionary *dic in list) {
            
            ZGOrderModel *mdoel = [[ZGOrderModel alloc] init];
            mdoel.order_Account = [NSString stringWithFormat:@"%@", dic[@"order_Account"]];
            mdoel.order_state = [NSString stringWithFormat:@"%@", dic[@"order_state"]];
            mdoel.address = [NSString stringWithFormat:@"%@", dic[@"address"]];
            mdoel.recipientName = [NSString stringWithFormat:@"%@", dic[@"recipientName"]];
            mdoel.recipientPhone = [NSString stringWithFormat:@"%@", dic[@"recipientPhone"]];
            mdoel.integral = [NSString stringWithFormat:@"%@", dic[@"integral"]];
            mdoel.time = [NSString stringWithFormat:@"%@", dic[@"time"]];
            mdoel.update_time = [NSString stringWithFormat:@"%@", dic[@"update_time"]];
            mdoel.paymentMethod = [NSString stringWithFormat:@"%@", dic[@"paymentMethod"]];
            mdoel.goodsArray = dic[@"accList"];
            

            [dataArray addObject:mdoel];
            
        }
        
        //主线程更新视图
        dispatch_async(dispatch_get_main_queue(), ^{
            
            [_myTableView reloadData];
            
            //停止风火轮
            [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
            
        });
        
        
    } failure:^(NSError *error) {
        //后台连接直接不成功，弹出“连接服务器失败”
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"网络异常：连接服务器失败"];
        //停止风火轮
        [smallFunc stopActivityIndicator:@"HMYGMyOrderRecordViewController"];
    }];
        

}



#pragma mark - 支付宝支付
- (void)payWithAliPayURL:(NSString *)urlString pkey:(NSString *)pkey serial:(NSString *)serial money:(NSString *)money {
    
    //    NotifyUrl = "/userLogin/zfbNotify.do";
    //    PrivateKey = "MIICWwIBAAKBgQDKmseuimNCJ6G/Ync4XfBJXLvDn2kjXnEyKRoIXhp9tbWQyjSNfAK2/p6Nq93P8eLXPoLj+uNaMt9lES9Y06j/vivFSxlJDGc63DSYJ0R4HU4fgDHJpnMZv4a7Ws5iz2v/9wvA6GrLQ3Rul8Xit3dkZi4rR9HL15wAXOZphloc1wIDAQABAoGAVi1n6hHrDmSVJDbZxxwN7OaI5ziTG/w74b4h2JVOZ1I3HJMlr1ikPvomrtP/0Udt2Wg5fIdm1SL2aqLYpMvDAeM9zzo5WN85M+UNezFJ8HP2HZSTjHY41maq7tPFtn6tiVtgAfi64b0CAnMh7UN8OUsDIi90GmVsTtXdFRNZcaECQQDlz/UB+0bHe4TnpGT5RdrzWNroD5eVxbK0QFZTqNIti7UUNSo1NeXCqXtJH5oo/UzdrfFNefFy+9SjUSNN63iFAkEA4bEf0Iz0RK5o3c/ubLneUBCCr9p7Jlaq5YAESDwP6ZSxg0fBDDSd32Kq0gHboH/s7bx1nD8A/JHg/OF4d/7sqwJAW/e8Eh3v9lbdGiJ08jjdZXNSr3nF7P8gA/iXU4WFDwsQ3VRlXsQB/cP7fYjzFaJAx5obrii10pErSGxpF367TQJARdQcqNUDusBPt9lexosXiqQhGzG5CpqkE4/xQzw6HCYiaiDoTNN2ySfo/EMQ5e7Oqpu1s9sWfg7Qks1cDZx1MwJAegVFl/FX9Rqk3+YtfzqUz2z1/n8cHUABRu2ITJP/Zc6VpYeqPezkeNIi41hTQzzAUYt05GdaCELBmBhNxaVWQg==";
    //    SerialNumber = 384280161135;
    //    SettlementMoney = "65.0";
    
    //订单号
    NSString *tradeNO = serial;
    //金额
    NSString *rechargeMoney = money;
    // CYC注意啦
//    NSString *rechargeMoney = @"0.01";
    
    //私钥
    NSString *privateKey = pkey;
    //后台服务器回调地址
    NSString *notifyURL = urlString;
    
    //执行支付宝支付功能，发送信息给支付宝服务端
    [self rechargeByAlipay:[rechargeMoney floatValue] andTradeNO:tradeNO andNotifyURL:notifyURL andPrivateKey:privateKey];
    
}


#pragma mark - WXApiManagerDelegate委托方法
//弹出支付后的提示
- (void)managerWeixinPayCallbackToAlter:(BOOL)isSuccess money:(NSString *)money message:(NSString *)message{
    
    dispatch_async(dispatch_get_main_queue(), ^{
        
        LFNavigationController *myna = (LFNavigationController *)[[UIStoryboard storyboardWithName:@"Main" bundle:nil] instantiateViewControllerWithIdentifier:@"myna"];
        RechargeFinishShowAlertViewController *rechargeFinishView=[myna.viewControllers firstObject];
        rechargeFinishView.isSuccess = isSuccess;
        rechargeFinishView.rechargeMoney = money;
        rechargeFinishView.rechargeMessage = message;
        rechargeFinishView.viewStyle = YES;
        
        rechargeFinishView.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
        [self presentViewController:myna animated:YES completion:nil];
    });
}


#pragma mark - 集成支付宝支付的功能（来自官方demo）
- (void)rechargeByAlipay:(float)rechargeMoney andTradeNO:(NSString *)tradeNO andNotifyURL:(NSString *)notifyURL andPrivateKey:(NSString *)privateKey{
    
    /*
     *商户的唯一的parnter和seller。
     *签约后，支付宝会为每个商户分配一个唯一的 parnter 和 seller。
     */
    
    /*============================================================================*/
    /*=======================需要填写商户app申请的===================================*/
    /*============================================================================*/
    NSString *partner = @"2088721059692241";
    NSString *seller = @"2984487294@qq.com";
    //    NSString *privateKey = privateKey;
    /*============================================================================*/
    /*============================================================================*/
    /*============================================================================*/
    
    //partner和seller获取失败,提示
    if ([partner length] == 0 || [seller length] == 0 || [privateKey length] == 0){
        //弹窗提示
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"提示" message:@"缺少partner或者seller或者私钥。" preferredStyle:UIAlertControllerStyleAlert];
        
        UIAlertAction *defaultButton = [UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:nil];
        [alert addAction:defaultButton];
        [self presentViewController:alert animated:YES completion:nil];
        
        return;
    }
    
    
    /*
     *生成订单信息及签名
     */
    //将商品信息赋予AlixPayOrder的成员变量
    Order *order = [[Order alloc] init];
    order.partner = partner;
    order.sellerID = seller;
    order.outTradeNO = tradeNO;                     //订单ID（由商家自行制定）
    order.subject = @"钻购商城";                    //商品标题
    order.body = @"湖南钻购电子商务有限公司";                   //商品描述
    order.totalFee = [NSString stringWithFormat:@"%.2f",rechargeMoney]; //商品价格
    order.notifyURL =  notifyURL; //回调URL
    
    order.service = @"mobile.securitypay.pay";
    order.paymentType = @"1";
    order.inputCharset = @"utf-8";
    order.itBPay = @"30m";
    order.showURL = @"m.alipay.com";
    
    //应用注册scheme,在AlixPayDemo-Info.plist定义URL types
    NSString *appScheme = @"ap2017060207403210";
    
    //将商品信息拼接成字符串
    NSString *orderSpec = [order description];
    NSLog(@"orderSpec = %@",orderSpec);
    
    //获取私钥并将商户信息签名,外部商户可以根据情况存放私钥和签名,只需要遵循RSA签名规范,并将签名字符串base64编码和UrlEncode
    id<DataSigner> signer = CreateRSADataSigner(privateKey);
    NSString *signedString = [signer signString:orderSpec];
    
    //将签名成功字符串格式化为订单字符串,请严格按照该格式
    NSString *orderString = nil;
    if (signedString != nil) {
        orderString = [NSString stringWithFormat:@"%@&sign=\"%@\"&sign_type=\"%@\"",
                       orderSpec, signedString, @"RSA"];
        
        /*
         * 如果手机内没安装支付宝的app，会直接展现支付宝web支付界面，通过callback返回支付结果；
         * 如果手机内安装了支付宝的app，会跳转到支付宝的app支付，然后通过openURL的回调返回支付结果。
         */
        
        
        [[AlipaySDK defaultService] payOrder:orderString fromScheme:appScheme callback:^(NSDictionary *resultDic) {
            
            //结果处理
            NSLog(@"reslut = %@",resultDic);
            
            //微信回调相关的委托，给到一个单例的WXApiManager对象
            [AlipayCallbackManager sharedManager];
            [[AlipayCallbackManager sharedManager] alipayCallbackAndShowAlter:resultDic];
            
        }];
    }
    
}


#pragma mark - AlipayCallbackDelegate委托方法
//弹出支付后的提示
- (void)managerAlipayCallbackToAlter:(BOOL)isSuccess money:(NSString *)money message:(NSString *)message{
    
    dispatch_async(dispatch_get_main_queue(), ^{
        
        LFNavigationController *myna = (LFNavigationController *)[[UIStoryboard storyboardWithName:@"Main" bundle:nil] instantiateViewControllerWithIdentifier:@"myna"];
        RechargeFinishShowAlertViewController *rechargeFinishView=[myna.viewControllers firstObject];
        rechargeFinishView.isSuccess = isSuccess;
        rechargeFinishView.rechargeMoney = money;
        rechargeFinishView.rechargeMessage = message;
        rechargeFinishView.viewStyle = YES;
        
        rechargeFinishView.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
        [self presentViewController:myna animated:YES completion:nil];
    });
    
}








































@end
