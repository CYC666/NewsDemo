//
//  AccountFlowsMoreViewController.m
//  LFBaseFrameTwo
//
//  Created by admin on 16/12/27.
//  Copyright © 2016年 admin. All rights reserved.
//

#import "AccountFlowsMoreViewController.h"
#import "IncomeStatementTableViewController.h"
#import "PresentDetailsTableViewController.h"
#import "PresentDetailView.h"
#import "IncomeStatementView.h"
#import "IntegralMoreTableViewController.h"
#import "IntegralMoreView.h"

#define Num_Button (3.0)

@interface AccountFlowsMoreViewController ()<UIScrollViewDelegate>
{
    //工具方法单例
    SmallFunctionTool *smallFunc;
    //用户信息单例
    UserInformation *userInfo;
    
    //主滑动视图，用于实现左右滑动
    UIScrollView *mainScrollView;
    //跟随按钮动画的label
    UILabel *sliderLabel;
    
    IntegralMoreTableViewController *firstVC; //
    IncomeStatementTableViewController *secondVC;  //
    PresentDetailsTableViewController *thirdVC;  //
    
    IntegralMoreView *firstView;
    IncomeStatementView *secondView;
    PresentDetailView *thirdView;
    
    NSInteger indexFlag;
    
}
@end

@implementation AccountFlowsMoreViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    //初始化
    smallFunc = [SmallFunctionTool sharedInstance];
    userInfo = [UserInformation sharedInstance];
    indexFlag = 0;
    
    self.view.backgroundColor=Background_Color;
    
    //导航栏标题
    self.navigationItem.title = @"账户流水";
    
    //创建视图
    firstView = [IntegralMoreView viewFromNIB];
    firstView.frame = CGRectMake(0, 0, SCREEN_WIDTH, 80.0);
    firstView.labelAllIntegral.text=[NSString stringWithFormat:@"%@",[SmallFunctionTool changeBigNumber:userInfo.Integral]];
    firstView.labelTodayIntegral.text=_TodayIntegral; //今天获得的积分
    
    //创建视图
    secondView = [IncomeStatementView viewFromNIB];
    secondView.frame = CGRectMake(SCREEN_WIDTH, 0, SCREEN_WIDTH, 80.0);
    secondView.labelMoneyLeiji.text=[SmallFunctionTool changeBigNumber:userInfo.IncomeTotal];//累计收益
    secondView.labelTodayMoney.text=_TodayIncome; //今天收益
    
    //创建视图
    thirdView = [PresentDetailView viewFromNIB];
    thirdView.frame = CGRectMake(SCREEN_WIDTH*2, 0, SCREEN_WIDTH, 80.0);
    thirdView.labelFrozen.text=userInfo.Freeze; //冻结金额
    thirdView.labelWithdraw.text=[SmallFunctionTool changeBigNumber:userInfo.WithdrawTotal]; //已提金额
    thirdView.labelCanWithdraw.text=[SmallFunctionTool changeBigNumber:userInfo.Balance]; //可提金额就是余额
    
    
    //创建滑动视图 (y值：64+45+1==110)
    mainScrollView = [[UIScrollView alloc]initWithFrame:CGRectMake(0, 111, SCREEN_WIDTH, SCREEN_HEIGHT-111.0)];
    mainScrollView.delegate = self;
    mainScrollView.backgroundColor = Background_Color;
    mainScrollView.pagingEnabled = YES;
    mainScrollView.showsHorizontalScrollIndicator = NO;
    mainScrollView.showsVerticalScrollIndicator = NO;
    mainScrollView.bounces = NO;
    [mainScrollView addSubview:firstView];
    [mainScrollView addSubview:secondView];
    [mainScrollView addSubview:thirdView];
    [self.view addSubview:mainScrollView];
    
    
    //将两个Xib中的view加到滑动视图中
    NSArray *views = @[self.firstVC.view, self.secondVC.view, self.thirdVC.view];
    for (int i = 0; i < views.count; i++){
        //添加背景，把两个个VC的view贴到mainScrollView上面
        UIView *pageView = [[UIView alloc]initWithFrame:CGRectMake(SCREEN_WIDTH * i, 90, mainScrollView.frame.size.width, mainScrollView.frame.size.height-90.0)];
        [pageView addSubview:views[i]];
        [mainScrollView addSubview:pageView];
    }
    mainScrollView.contentSize = CGSizeMake(SCREEN_WIDTH * (views.count), 0);
    
    //创建需要动画处理的label (y值：64+45==109)
    sliderLabel = [[UILabel alloc]initWithFrame:CGRectMake(0, 109, SCREEN_WIDTH/Num_Button, 2)];
    sliderLabel.backgroundColor = Publie_Color;
    [self.view addSubview:sliderLabel];
    
    
}


//懒加载VC
- (IntegralMoreTableViewController *)firstVC{
    if (firstVC==nil) {
        firstVC = [self.storyboard instantiateViewControllerWithIdentifier:@"IntegralMoreTableViewController"];
    }
    return firstVC;
}
//懒加载VC
- (IncomeStatementTableViewController *)secondVC{
    if (secondVC==nil) {
        secondVC = [self.storyboard instantiateViewControllerWithIdentifier:@"IncomeStatementTableViewController"];
    }
    return secondVC;
}
//懒加载VC
- (PresentDetailsTableViewController *)thirdVC{
    if (thirdVC==nil) {
        thirdVC = [self.storyboard instantiateViewControllerWithIdentifier:@"PresentDetailsTableViewController"];
    }
    return thirdVC;
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

//积分明细
- (IBAction)clickIntegralt:(UIButton *)sender {
    
    //按钮0.3秒只可以点击1次
    [SmallFunctionTool singleClickButtonRestriction:sender];
    
    if (indexFlag != 0) {
        //设置indexFlag
        indexFlag  = 0;
        
        //开始滑动视图的动画
        [UIView animateWithDuration:0.3 animations:^{
            mainScrollView.contentOffset = CGPointMake(SCREEN_WIDTH * indexFlag, mainScrollView.contentOffset.y);
        } completion:^(BOOL finished) {
            //修改按钮的颜色
            [self buttonStyleWithIndex:indexFlag];
        }];
    }
    
}

//收益明细
- (IBAction)clickIncomeStatement:(UIButton *)sender {
    //按钮0.3秒只可以点击1次
    [SmallFunctionTool singleClickButtonRestriction:sender];
    
    if (indexFlag != 1) {
        //设置indexFlag
        indexFlag  = 1;
        
        //开始滑动视图的动画
        [UIView animateWithDuration:0.3 animations:^{
            mainScrollView.contentOffset = CGPointMake(SCREEN_WIDTH * indexFlag, mainScrollView.contentOffset.y);
        } completion:^(BOOL finished) {
            //修改按钮的颜色
            [self buttonStyleWithIndex:indexFlag];
        }];
    }
}

//提现明细
- (IBAction)clickPresent:(UIButton *)sender {
    //按钮0.3秒只可以点击1次
    [SmallFunctionTool singleClickButtonRestriction:sender];
    
    if (indexFlag != 2) {
        //设置indexFlag
        indexFlag  = 2;
        
        //开始滑动视图的动画
        [UIView animateWithDuration:0.3 animations:^{
            mainScrollView.contentOffset = CGPointMake(SCREEN_WIDTH * indexFlag, mainScrollView.contentOffset.y);
        } completion:^(BOOL finished) {
            //修改按钮的颜色
            [self buttonStyleWithIndex:indexFlag];
        }];
    }
}


#pragma mark - UIScrollViewDelegate委托方法，设置左右滑动以及label动画

// 根据ScrollView的偏移量来计算红色指示器的偏移量
-(void)scrollViewDidScroll:(UIScrollView *)scrollView {
    
    CGRect tempFrame = sliderLabel.frame;
    tempFrame.origin.x = scrollView.contentOffset.x / Num_Button;
    sliderLabel.frame = tempFrame;
    
    
    //判断是否需要更改按钮的样式
    double index_a = sliderLabel.frame.origin.x + (sliderLabel.frame.size.width/2.0);
    double index_b = SCREEN_WIDTH / Num_Button;
    
    NSInteger flag = (int)(index_a/index_b);
    
    if (indexFlag != flag) {
        indexFlag = flag;
        //修改按钮的颜色
        [self buttonStyleWithIndex:indexFlag];
    }
    
}

// 根据indexFlag设置按钮的颜色
- (void)buttonStyleWithIndex:(NSInteger)tag{
    
    //修改按钮的颜色
    dispatch_async(dispatch_get_main_queue(), ^{
        if (indexFlag == 0) {
            
            //按钮处在被选择的状态
            _btnIntegral.selected = YES;
            _btnIncomeStatement.selected = NO;
            _btnPresent.selected = NO;
            
            //修改按钮的颜色或者文字的样式
            _btnIntegral.titleLabel.font = [UIFont boldSystemFontOfSize:18];
            _btnIncomeStatement.titleLabel.font = [UIFont boldSystemFontOfSize:16];
            _btnPresent.titleLabel.font = [UIFont boldSystemFontOfSize:16];
            [_btnIntegral setTitleColor:Publie_Color forState:UIControlStateNormal];
            [_btnIncomeStatement setTitleColor:Label_Color_B forState:UIControlStateNormal];
            [_btnPresent setTitleColor:Label_Color_B forState:UIControlStateNormal];
            
        } else if (indexFlag == 1) {
            
            //按钮处在被选择的状态
            _btnIntegral.selected = NO;
            _btnIncomeStatement.selected = YES;
            _btnPresent.selected = NO;
            
            //修改按钮的颜色或者文字的样式
            _btnIntegral.titleLabel.font = [UIFont boldSystemFontOfSize:16];
            _btnIncomeStatement.titleLabel.font = [UIFont boldSystemFontOfSize:18];
            _btnPresent.titleLabel.font = [UIFont boldSystemFontOfSize:16];
            [_btnIntegral setTitleColor:Label_Color_B forState:UIControlStateNormal];
            [_btnIncomeStatement setTitleColor:Publie_Color forState:UIControlStateNormal];
            [_btnPresent setTitleColor:Label_Color_B forState:UIControlStateNormal];
            
        } else if (indexFlag == 2) {
            
            //按钮处在被选择的状态
            _btnIntegral.selected = NO;
            _btnIncomeStatement.selected = NO;
            _btnPresent.selected = YES;
            
            //修改按钮的颜色或者文字的样式
            _btnIntegral.titleLabel.font = [UIFont boldSystemFontOfSize:16];
            _btnIncomeStatement.titleLabel.font = [UIFont boldSystemFontOfSize:16];
            _btnPresent.titleLabel.font = [UIFont boldSystemFontOfSize:18];
            [_btnIntegral setTitleColor:Label_Color_B forState:UIControlStateNormal];
            [_btnIncomeStatement setTitleColor:Label_Color_B forState:UIControlStateNormal];
            [_btnPresent setTitleColor:Publie_Color forState:UIControlStateNormal];
            
        }
    });
    
}



@end
