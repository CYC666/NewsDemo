//
//  AccountFlowsViewController.m
//  LFBaseFrameTwo
//
//  Created by yongda sha on 16/12/23.
//  Copyright © 2016年 admin. All rights reserved.
//

#import "AccountFlowsViewController.h"
#import "IncomeStatementTableViewController.h"
#import "PresentDetailsTableViewController.h"
#import "IntegralMoreTableViewController.h"
#import "PresentDetailView.h"
#import "IncomeStatementView.h"
#import "IntegralMoreView.h"
#import "YiixinDetialView.h"


@interface AccountFlowsViewController ()<UIScrollViewDelegate>
{
    //工具方法单例
    SmallFunctionTool *smallFunc;
    //用户信息单例
    UserInformation *userInfo;
    
    //主滑动视图，用于实现左右滑动
    UIScrollView *mainScrollView;
    //跟随按钮动画的label
    UILabel *sliderLabel;
    
    IntegralMoreTableViewController *yixinVC;
    IncomeStatementTableViewController *firstVC;
    PresentDetailsTableViewController *secondVC;
    
    IntegralMoreView *integralView;
    PresentDetailView *secondView;
    IncomeStatementView *firstView;
    
    UIButton *integralButton;
    UIButton *firstButton;
    UIButton *secondButton;
    
    NSInteger indexFlag;
    
    // 分页个数
    NSInteger Num_Button;
    
}
@end

@implementation AccountFlowsViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    //初始化
    smallFunc = [SmallFunctionTool sharedInstance];
    userInfo = [UserInformation sharedInstance];
    indexFlag = 0;
    
    self.view.backgroundColor=Background_Color;
    
    if ([userInfo.RoleType isEqualToString:@"0"] || [userInfo.RoleType isEqualToString:@"10"]) {
        
        _btnIncomeStatement.hidden = YES;
        _btnPresent.hidden = YES;
        
        // 积分明细 （只有个人用户和商户才会有这个积分）
        integralButton = [UIButton buttonWithType:UIButtonTypeCustom];
        integralButton.frame = CGRectMake(0, 64, SCREEN_WIDTH/3, 45);
        [integralButton setBackgroundColor:[UIColor whiteColor]];
        [integralButton setTitle:@"积分" forState:UIControlStateNormal];
        [integralButton setTitleColor:Publie_Color forState:UIControlStateNormal];
        integralButton.titleLabel.font = [UIFont boldSystemFontOfSize:18];
        [integralButton addTarget:self action:@selector(integralButtonAction:) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:integralButton];
        
        // 收益明细
        firstButton = [UIButton buttonWithType:UIButtonTypeCustom];
        firstButton.frame = CGRectMake(SCREEN_WIDTH/3, 64, SCREEN_WIDTH/3, 45);
        [firstButton setBackgroundColor:[UIColor whiteColor]];
        [firstButton setTitle:@"收益" forState:UIControlStateNormal];
        [firstButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
        firstButton.titleLabel.font = [UIFont systemFontOfSize:16];
        [firstButton addTarget:self action:@selector(firstButtonAction:) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:firstButton];
        
        // 提现明细
        secondButton = [UIButton buttonWithType:UIButtonTypeCustom];
        secondButton.frame = CGRectMake(SCREEN_WIDTH/3 * 2, 64, SCREEN_WIDTH/3, 45);
        [secondButton setBackgroundColor:[UIColor whiteColor]];
        [secondButton setTitle:@"提现" forState:UIControlStateNormal];
        [secondButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
        secondButton.titleLabel.font = [UIFont systemFontOfSize:16];
        [secondButton addTarget:self action:@selector(secondButtonAction:) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:secondButton];
        
        // 多了一个积分明细
        integralView = [IntegralMoreView viewFromNIB];
        integralView.frame = CGRectMake(0, 0, SCREEN_WIDTH, 90.0);
        // 当前用户剩余积分
        integralView.labelTodayIntegral.text = [SmallFunctionTool changeBigNumber:_TodayIntegral];
        // 当前用户累计获得积分
        integralView.labelAllIntegral.text = [SmallFunctionTool changeBigNumber:userInfo.IntegralTotal];

        
        //创建视图
        firstView = [IncomeStatementView viewFromNIB];
        firstView.frame = CGRectMake(SCREEN_WIDTH, 0, SCREEN_WIDTH, 90.0);
        firstView.labelMoneyLeiji.text = [SmallFunctionTool changeBigNumber:userInfo.IncomeTotal];  // 累计收益
        firstView.labelTodayMoney.text = [SmallFunctionTool changeBigNumber:_TodayIncome];          // 今日收入
        
        //创建视图
        secondView = [PresentDetailView viewFromNIB];
        secondView.frame = CGRectMake(SCREEN_WIDTH*2, 0, SCREEN_WIDTH, 90.0);
        secondView.labelWithdraw.text=[SmallFunctionTool changeBigNumber:userInfo.WithdrawTotal];   // 已提金额
        secondView.labelCanWithdraw.text=[SmallFunctionTool changeBigNumber:userInfo.Balance];      // 可提金额
        secondView.labelFrozen.text=[SmallFunctionTool changeBigNumber:userInfo.Freeze];            // 当前冻结
        
        //创建滑动视图 (y值：64+45+2==111)
        mainScrollView = [[UIScrollView alloc]initWithFrame:CGRectMake(0, 111, SCREEN_WIDTH, SCREEN_HEIGHT-111)];
        mainScrollView.delegate = self;
        mainScrollView.backgroundColor = Background_Color;
        mainScrollView.pagingEnabled = YES;
        mainScrollView.showsHorizontalScrollIndicator = NO;
        mainScrollView.showsVerticalScrollIndicator = NO;
        mainScrollView.bounces = NO;
        [mainScrollView addSubview:integralView];
        [mainScrollView addSubview:firstView];
        [mainScrollView addSubview:secondView];
        [self.view addSubview:mainScrollView];
        
        //将两个Xib中的view加到滑动视图中
        NSArray *views = @[self.yixinVC.view, self.firstVC.view, self.secondVC.view];
        Num_Button = views.count;
        for (int i = 0; i < Num_Button; i++){
            //添加背景，把两个个VC的view贴到mainScrollView上面
            UIView *pageView = [[UIView alloc]initWithFrame:CGRectMake(SCREEN_WIDTH * i, 90, mainScrollView.frame.size.width, mainScrollView.frame.size.height-90.0)];
            [pageView addSubview:views[i]];
            [mainScrollView addSubview:pageView];
        }
        mainScrollView.contentSize = CGSizeMake(SCREEN_WIDTH * Num_Button, 0);
        
        //创建需要动画处理的label (y值：64+45==109)
        sliderLabel = [[UILabel alloc]initWithFrame:CGRectMake(0, 109, SCREEN_WIDTH/Num_Button, 2)];
        sliderLabel.backgroundColor = Publie_Color;
        [self.view addSubview:sliderLabel];
        
    } else {
    
        //收益明细
        firstView = [IncomeStatementView viewFromNIB];
        firstView.frame = CGRectMake(0, 0, SCREEN_WIDTH, 80.0);
        firstView.labelMoneyLeiji.text=[SmallFunctionTool changeBigNumber:userInfo.IncomeTotal];    // 累计收益
        firstView.labelTodayMoney.text=[SmallFunctionTool changeBigNumber:_TodayIncome];            // 今日收益
        
        //提现明细
        secondView = [PresentDetailView viewFromNIB];
        secondView.frame = CGRectMake(SCREEN_WIDTH, 0, SCREEN_WIDTH, 80.0);
        secondView.labelFrozen.text=[SmallFunctionTool changeBigNumber:userInfo.Freeze];            // 当前冻结
        secondView.labelWithdraw.text=[SmallFunctionTool changeBigNumber:userInfo.WithdrawTotal];   // 已提金额
        secondView.labelCanWithdraw.text=[SmallFunctionTool changeBigNumber:userInfo.Balance];      //可提金额就是余额
        
        //创建滑动视图 (y值：64+45+2==111)
        mainScrollView = [[UIScrollView alloc]initWithFrame:CGRectMake(0, 111, SCREEN_WIDTH, SCREEN_HEIGHT-111)];
        mainScrollView.delegate = self;
        mainScrollView.backgroundColor = Background_Color;
        mainScrollView.pagingEnabled = YES;
        mainScrollView.showsHorizontalScrollIndicator = NO;
        mainScrollView.showsVerticalScrollIndicator = NO;
        mainScrollView.bounces = NO;
        [mainScrollView addSubview:firstView];
        [mainScrollView addSubview:secondView];
        [self.view addSubview:mainScrollView];
        
        //将两个Xib中的view加到滑动视图中
        NSArray *views = @[self.firstVC.view, self.secondVC.view];
        Num_Button = views.count;
        for (int i = 0; i < Num_Button; i++){
            //添加背景，把两个个VC的view贴到mainScrollView上面
            UIView *pageView = [[UIView alloc]initWithFrame:CGRectMake(SCREEN_WIDTH * i, 90, mainScrollView.frame.size.width, mainScrollView.frame.size.height-90.0)];
            [pageView addSubview:views[i]];
            [mainScrollView addSubview:pageView];
        }
        mainScrollView.contentSize = CGSizeMake(SCREEN_WIDTH * Num_Button, 0);
        
        //创建需要动画处理的label (y值：64+45==109)
        sliderLabel = [[UILabel alloc]initWithFrame:CGRectMake(0, 109, SCREEN_WIDTH/Num_Button, 2)];
        sliderLabel.backgroundColor = Publie_Color;
        [self.view addSubview:sliderLabel];
    
    }
    
    
    
    

}

//积分明细
-(IntegralMoreTableViewController *)yixinVC{
    if (yixinVC==nil) {
        yixinVC = [self.storyboard instantiateViewControllerWithIdentifier:@"IntegralMoreTableViewController"];
        // secondVC.parentVC = self;
        
    }
    return yixinVC;
}
//提现明细
-(PresentDetailsTableViewController *)secondVC{
    if (secondVC==nil) {
        secondVC = [self.storyboard instantiateViewControllerWithIdentifier:@"PresentDetailsTableViewController"];
        // secondVC.parentVC = self;
        
    }
    return secondVC;
}
//收益明细
-(IncomeStatementTableViewController *)firstVC{
    if (firstVC==nil) {
        firstVC = [self.storyboard instantiateViewControllerWithIdentifier:@"IncomeStatementTableViewController"];
        // secondVC.parentVC = self;
        
    }
    return firstVC;
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

#pragma mark - seg按钮响应
- (void)integralButtonAction:(UIButton *)button {

    //按钮0.3秒只可以点击1次
    [SmallFunctionTool singleClickButtonRestriction:button];
    
    indexFlag  = 0;
    
    //开始滑动视图的动画
    [UIView animateWithDuration:0.3 animations:^{
        mainScrollView.contentOffset = CGPointMake(SCREEN_WIDTH * indexFlag, mainScrollView.contentOffset.y);
    } completion:^(BOOL finished) {
        //修改按钮的颜色
        [self buttonStyleWithIndex:indexFlag];
    }];
        
        


}
- (void)firstButtonAction:(UIButton *)button {
    
    //按钮0.3秒只可以点击1次
    [SmallFunctionTool singleClickButtonRestriction:button];
    
    indexFlag  = 1;
    
    //开始滑动视图的动画
    [UIView animateWithDuration:0.3 animations:^{
        mainScrollView.contentOffset = CGPointMake(SCREEN_WIDTH * indexFlag, mainScrollView.contentOffset.y);
    } completion:^(BOOL finished) {
        //修改按钮的颜色
        [self buttonStyleWithIndex:indexFlag];
    }];
    
}
- (void)secondButtonAction:(UIButton *)button {
    
    //按钮0.3秒只可以点击1次
    [SmallFunctionTool singleClickButtonRestriction:button];
    
    indexFlag  = 2;
    
    //开始滑动视图的动画
    [UIView animateWithDuration:0.3 animations:^{
        mainScrollView.contentOffset = CGPointMake(SCREEN_WIDTH * indexFlag, mainScrollView.contentOffset.y);
    } completion:^(BOOL finished) {
        //修改按钮的颜色
        [self buttonStyleWithIndex:indexFlag];
    }];
    
}

- (IBAction)clickIncomeStatement:(UIButton *)sender {
    
    //按钮0.3秒只可以点击1次
    [SmallFunctionTool singleClickButtonRestriction:sender];
    
    if (indexFlag == 1) {
        //设置indexFlag
        indexFlag  = 0;
        
        //开始滑动视图的动画
        [UIView animateWithDuration:0.3 animations:^{
            mainScrollView.contentOffset = CGPointMake(SCREEN_WIDTH * indexFlag, mainScrollView.contentOffset.y);
        } completion:^(BOOL finished) {
            //修改按钮的颜色
            [self buttonStyleWithIndex:indexFlag];
        }];
        
        
    }
}
- (IBAction)clickPresent:(UIButton *)sender {
    
    //按钮0.3秒只可以点击1次
    [SmallFunctionTool singleClickButtonRestriction:sender];
    
    if (indexFlag == 0) {
        //设置indexFlag
        indexFlag  = 1;
        
        //开始滑动视图的动画
        [UIView animateWithDuration:0.3 animations:^{
            mainScrollView.contentOffset = CGPointMake(SCREEN_WIDTH * indexFlag, mainScrollView.contentOffset.y);
        } completion:^(BOOL finished) {
            //修改按钮的颜色
            [self buttonStyleWithIndex:indexFlag];
        }];
        
        
    }
}
#pragma mark - UIScrollViewDelegate委托方法，设置左右滑动以及label动画

// 根据ScrollView的偏移量来计算红色指示器的偏移量
-(void)scrollViewDidScroll:(UIScrollView *)scrollView {
    
    CGRect tempFrame = sliderLabel.frame;
    tempFrame.origin.x = scrollView.contentOffset.x / Num_Button;
    sliderLabel.frame = tempFrame;
    
    
//    //判断是否需要更改按钮的样式
//    double index_a = sliderLabel.frame.origin.x + (sliderLabel.frame.size.width/2.0);
//    double index_b = SCREEN_WIDTH / Num_Button;
//    
//    NSInteger flag = index_a > index_b ? 1 : 0 ;
    
    NSInteger pageNum = scrollView.contentOffset.x / SCREEN_WIDTH;
    
    if (indexFlag != pageNum) {
        indexFlag = pageNum;
        //修改按钮的颜色
        [self buttonStyleWithIndex:indexFlag];
    }
    
}


// 根据indexFlag设置按钮的颜色
- (void)buttonStyleWithIndex:(NSInteger)tag{
    
    //修改按钮的颜色
    dispatch_async(dispatch_get_main_queue(), ^{
        
        if (Num_Button == 3) {
            if (indexFlag == 0) {
                
                //按钮处在被选择的状态
                integralButton.selected = NO;
                firstButton.selected = YES;
                secondButton.selected = YES;
                
                //修改按钮的颜色或者文字的样式
                integralButton.titleLabel.font = [UIFont boldSystemFontOfSize:18];
                firstButton.titleLabel.font = [UIFont boldSystemFontOfSize:16];
                secondButton.titleLabel.font = [UIFont boldSystemFontOfSize:16];
                [integralButton setTitleColor:Publie_Color forState:UIControlStateNormal];
                [firstButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
                [secondButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
                
            } else if (indexFlag == 1) {
                //按钮处在被选择的状态
                integralButton.selected = YES;
                firstButton.selected = NO;
                secondButton.selected = YES;
                
                //修改按钮的颜色或者文字的样式
                integralButton.titleLabel.font = [UIFont boldSystemFontOfSize:16];
                firstButton.titleLabel.font = [UIFont boldSystemFontOfSize:18];
                secondButton.titleLabel.font = [UIFont boldSystemFontOfSize:16];
                [integralButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
                [firstButton setTitleColor:Publie_Color forState:UIControlStateNormal];
                [secondButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
            } else if (indexFlag == 2) {
                //按钮处在被选择的状态
                integralButton.selected = YES;
                firstButton.selected = YES;
                secondButton.selected = NO;
                
                //修改按钮的颜色或者文字的样式
                integralButton.titleLabel.font = [UIFont boldSystemFontOfSize:16];
                firstButton.titleLabel.font = [UIFont boldSystemFontOfSize:16];
                secondButton.titleLabel.font = [UIFont boldSystemFontOfSize:18];
                [integralButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
                [firstButton setTitleColor:Label_Color_B forState:UIControlStateNormal];
                [secondButton setTitleColor:Publie_Color forState:UIControlStateNormal];
            }
        } else if (Num_Button == 2) {
            if (indexFlag == 0) {
                
                //按钮处在被选择的状态
                _btnIncomeStatement.selected = YES;
                _btnPresent.selected = NO;
                
                //修改按钮的颜色或者文字的样式
                _btnIncomeStatement.titleLabel.font = [UIFont boldSystemFontOfSize:18];
                _btnPresent.titleLabel.font = [UIFont boldSystemFontOfSize:16];
                [_btnIncomeStatement setTitleColor:Publie_Color forState:UIControlStateNormal];
                [_btnPresent setTitleColor:Label_Color_B forState:UIControlStateNormal];
                
            } else if (indexFlag == 1) {
                //按钮处在被选择的状态
                _btnIncomeStatement.selected = NO;
                _btnPresent.selected = YES;
                
                //修改按钮的颜色或者文字的样式
                _btnIncomeStatement.titleLabel.font = [UIFont boldSystemFontOfSize:16];
                _btnPresent.titleLabel.font = [UIFont boldSystemFontOfSize:18];
                [_btnIncomeStatement setTitleColor:Label_Color_B forState:UIControlStateNormal];
                [_btnPresent setTitleColor:Publie_Color forState:UIControlStateNormal];
            }
        }
        
        
    });
    
}

@end
