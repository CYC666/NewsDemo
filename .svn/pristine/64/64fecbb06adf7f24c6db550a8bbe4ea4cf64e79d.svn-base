//
//  SurrenderRejectTableViewController.m
//  LFBaseFrameTwo
//
//  Created by admin on 16/12/27.
//  Copyright © 2016年 admin. All rights reserved.
//

#import "SurrenderRejectTableViewController.h"
#import <MJRefresh.h>
#import "SurrenderMainInfo.h"
#import "UIButton+addproty.h"
#import "AddSurrenderViewController.h"

@interface SurrenderRejectTableViewController ()
{
    //数据源
    NSMutableArray *rechargeRecordList;
    NSMutableArray *showRecordArray;
    
    //用户信息单例
    UserInformation *userInfo;
    //工具方法单例
    SmallFunctionTool *smallFunc;
    
    //分页的页数
    NSInteger pageNum;
    
    //无数据时呈现的视图
    UIView *noDataView;
    
}
@end

@implementation SurrenderRejectTableViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    //初始化
    userInfo = [UserInformation sharedInstance];
    smallFunc = [SmallFunctionTool sharedInstance];
    rechargeRecordList = [NSMutableArray array];
    showRecordArray = [NSMutableArray array];
    pageNum = 1;
    
    //表视图去除下面多余的线
    self.tableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
    
    
    //添加下拉刷新
    MJRefreshNormalHeader *header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        
        //请求数据+刷新界面
        [self refreshRecordData:NO];
        
        //关闭刷新
        [self.tableView.mj_header endRefreshing];
    }];
    header.stateLabel.font = [UIFont systemFontOfSize:12];
    header.lastUpdatedTimeLabel.font = [UIFont systemFontOfSize:11];
    self.tableView.mj_header = header;
    
    
    //上拉刷新
    MJRefreshAutoNormalFooter *footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{
        
        //调用刷新方法
        [self refreshRecordData:YES];
        
        //关闭刷新
        [self.tableView.mj_footer endRefreshing];
    }];
    footer.automaticallyHidden = YES;//自动根据有无数据来显示和隐藏
    footer.stateLabel.font = [UIFont systemFontOfSize:12];
    self.tableView.mj_footer = footer;
    
    //请求数据+刷新界面
    [self refreshRecordData:NO];
}



-(void)viewDidDisappear:(BOOL)animated{
    
    [super viewDidDisappear:animated];
    
    //停止风火轮
    [smallFunc stopActivityIndicator:@"SurrenderRejectTableViewController"];
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 私有方法
//请求并刷新数据
- (void)refreshRecordData:(BOOL)isFooterRefresh {
    
    //显示风火轮
    [smallFunc createActivityIndicator:self.view AndKey:@"SurrenderRejectTableViewController"];
    
    if (! isFooterRefresh) { //是下拉刷新
        //下拉刷新或者点击分类刷新，都需要将分页数重新设置为1
        pageNum = 1;
        [showRecordArray removeAllObjects];
    } else { //是上拉刷新
        //为上拉刷新，需要使用累加的分页值
        pageNum++;
    }
    
    //分页数
    NSString *paraPageNum = [NSString stringWithFormat:@"%ld",(long)pageNum];
    
    NSString *method = [NSString stringWithFormat:@"GetPageBusinessPayment"];
    NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                         userInfo.UserId,@"UserId",   //用户编号
                         paraPageNum,@"PageIndex",
                         @"10",@"PageSize",
                         @"1",@"PaymentMark",   //打款状态(0-待递交、1-被退回、2-审核中、3-已收款)
                         nil];
    
    [SOAPUrlSession SOAPDataWithMethod:method parameter:dic success:^(id responseObject) {
        
        NSDictionary *responseDic = responseObject;
        NSLog(@"GetPageUserAccountsDetail%@ ----- %@",responseDic[@"Code"],responseDic[@"Message"]);
        
        //返回的Code字段：200-成功，300-失败，400-无数据，500-内部服务异常
        NSString *responseCode = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
        
        if ([responseCode isEqualToString:@"200"]) {
            //后台返回“发送成功”
            NSArray *dataArray = responseObject[@"Data"][@"rows"];
            if (dataArray.count > 0) {
                
                //存储接口返回数据
                NSMutableArray *acquireArray = [NSMutableArray array];
                
                //将数据保存到数据源
                for (NSDictionary *dic in dataArray) {
                    //创建数据
                    SurrenderMainInfo *oneSurrender = [[SurrenderMainInfo alloc] initWithbusinesspaymentid:dic[@"businesspaymentid"] userid:dic[@"userid"] operatevalue:dic[@"operatevalue"] operateovervalue:dic[@"operateovervalue"] getintegral:dic[@"getintegral"] paymentmark:dic[@"paymentmark"] singlesystemmark:dic[@"singlesystemmark"] createdate:dic[@"createdate"] Description:dic[@"description"] auditdescription:dic[@"auditdescription"] modifydate:dic[@"modifydate"] modifyuserid:dic[@"modifyuserid"] modifyusername:dic[@"modifyusername"]];
                    [acquireArray addObject:oneSurrender];
                    
                }
                //初始化本地数据，（0-夺宝中，对应的商品列表）
                [rechargeRecordList removeAllObjects];
                rechargeRecordList = [acquireArray mutableCopy];
            } else {
                //展示无夺宝记录的404页面
                [rechargeRecordList removeAllObjects];
                NSLog(@"当前用户无已揭晓夺宝记录");
            }
            
            if (rechargeRecordList.count > 0) {
                //数据更新过后，才调用刷新方法
                dispatch_async(dispatch_get_main_queue(), ^{
                
                    //停止风火轮
                    [smallFunc stopActivityIndicator:@"SurrenderRejectTableViewController"];
                    
                    //去掉无数据时的视图
                    if (noDataView) {
                        [noDataView removeFromSuperview];
                        noDataView = nil;
                    }
                    
                    //更新数据源
                    if (! isFooterRefresh) { //是下拉刷新
                        showRecordArray = [rechargeRecordList mutableCopy];
                    } else { //是上拉刷新
                        NSArray *resultArr = [rechargeRecordList copy];
                        [showRecordArray addObjectsFromArray:resultArr];
                    }
                    
                    [self.tableView reloadData];
                    
                });
            }
        }else if ([responseCode isEqualToString:@"400"]){
            //停止风火轮
            [smallFunc stopActivityIndicator:@"SurrenderRejectTableViewController"];
            [rechargeRecordList removeAllObjects];
            if (showRecordArray.count> 0) {
                //数据更新过后，才调用刷新方法
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    //去掉无数据时的视图
                    if (noDataView) {
                        [noDataView removeFromSuperview];
                        noDataView = nil;
                    }
                    
                    FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                    [showMessage showAlertWithTwo:@"没有更多让利数据啦亲！"];
                    return ;
                    
                });
            }else {
                if (! noDataView) {
                    //显示无商品时的图片
                    dispatch_async(dispatch_get_main_queue(), ^{
                        noDataView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)];
                        noDataView.backgroundColor = Background_Color;
                        
                        //图标
                        UIImageView *noDataImage = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"暂无让利数据"]];
                        // CGRect imageFrame =CGRectMake(0, (SCREEN_HEIGHT-SCREEN_WIDTH)/2-20, SCREEN_WIDTH, (SCREEN_WIDTH)*(276.0/750.0));
                        noDataImage.center = CGPointMake(SCREEN_WIDTH/2.0, SCREEN_HEIGHT/2.0 - 150);
                        [noDataView addSubview:noDataImage];
                        [self.view addSubview:noDataView];
                    });
                }
            }
            
        } else {
            //停止风火轮
            [smallFunc stopActivityIndicator:@"SurrenderRejectTableViewController"];
            NSLog(@"获取让利数据失败");
            
        }
    } failure:^(NSError *error) {
        //停止风火轮
        [smallFunc stopActivityIndicator:@"SurrenderRejectTableViewController"];
        //后台连接直接不成功，弹出“连接服务器失败”
        NSLog(@"网络异常：连接服务器失败");
    }];
    
}

//"我已打款"按钮点击事件



#pragma mark - Table view data source
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    if (showRecordArray.count <= 0 || showRecordArray == nil) {
        return 0;
    } else {
        return showRecordArray.count;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"SurrenderRejectCell" forIndexPath:indexPath];
    
    SurrenderMainInfo *rechargeRec = showRecordArray[indexPath.row];
    
    UILabel *labelMoney = (UILabel *)[cell viewWithTag:1000];
    UILabel *labelTime = (UILabel *)[cell viewWithTag:1001];
    UIButton *buttonSubmit = (UIButton *)[cell viewWithTag:1002];
    
    labelMoney.text = [NSString stringWithFormat:@"%.3f",[rechargeRec.operatevalue floatValue]];
    labelTime.text = [NSString stringWithFormat:@"%@",rechargeRec.createdate];
    
    buttonSubmit.relatedID = rechargeRec.businesspaymentid;
    [buttonSubmit addTarget:self action:@selector(goToRemittanceAffirmView:) forControlEvents:UIControlEventTouchUpInside];
    
    return cell;
}

//"我要打款"按钮点击事件
- (void)goToRemittanceAffirmView:(UIButton *)sender {
    
    //按钮0.3秒只可以点击1次
    [SmallFunctionTool singleClickButtonRestriction:sender];
    
    dispatch_async(dispatch_get_main_queue(), ^{
        AddSurrenderViewController *addSurrenderVC =[[AddSurrenderViewController alloc]initWithNibName:@"AddSurrenderViewController" bundle:nil];
        addSurrenderVC.BusinessPaymentId = sender.relatedID;
        addSurrenderVC.parentVC = _parentVC;
        [_parentVC.navigationController pushViewController:addSurrenderVC animated:YES];
        
    });
    
}

#pragma mark - UITableViewDelegate协议
//表视图控制器中某一行被点击
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    //点击Cell后，消除阴影
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}
//tableview的下边线顶格
-(void)viewDidLayoutSubviews
{
    if ([self.tableView respondsToSelector:@selector(setSeparatorInset:)]) {
        [self.tableView setSeparatorInset:UIEdgeInsetsMake(0,0,0,0)];
    }
    
    if ([self.tableView respondsToSelector:@selector(setLayoutMargins:)]) {
        [self.tableView setLayoutMargins:UIEdgeInsetsMake(0,0,0,0)];
    }
}
-(void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) {
        [cell setSeparatorInset:UIEdgeInsetsZero];
    }
    
    if ([cell respondsToSelector:@selector(setLayoutMargins:)]) {
        [cell setLayoutMargins:UIEdgeInsetsZero];
    }
}

@end
