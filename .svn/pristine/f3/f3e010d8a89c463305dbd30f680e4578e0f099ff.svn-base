//
//  OrderPageTableViewController.m
//  LFBaseFrameTwo
//
//  Created by yongda sha on 16/12/29.
//  Copyright © 2016年 admin. All rights reserved.
//

#import "OrderPageTableViewController.h"
#import <MJRefresh.h>
#import <UIImageView+WebCache.h>
#import "LoginViewController.h"
#import "ExpenseRecord.h"

@interface OrderPageTableViewController ()
{
    //用户信息单例
    UserInformation *userInfo;
    
    //工具方法单例
    SmallFunctionTool *smallFunc;
    
    //无数据时呈现的视图
    UIView *noDataView;
    
    // 头视图
    UIView *headerView;
    
    //数据源
    NSMutableArray *rechargeRecordList;
    NSMutableArray *showRecordArray;
    
    //分页的页数
    NSInteger pageNum;
    
    // 累计消费
    UILabel *totalLabel;
    NSString *totalText;
    // 12%按钮
    UIButton *per12Button;
    // 24%按钮
    UIButton *per24Button;
    
    // 显示10%或20%的标致
    NSString *perFlag;
}
@end

@implementation OrderPageTableViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    //初始化
    userInfo = [UserInformation sharedInstance];
    smallFunc = [SmallFunctionTool sharedInstance];
    rechargeRecordList = [NSMutableArray array];
    showRecordArray = [NSMutableArray array];
    pageNum=1;
    perFlag = @"10";
    
    self.navigationItem.title = @"联盟消费";
    
    self.tableView.rowHeight=80.0;
    //表视图去除下面多余的线
    self.tableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];
    
    
    //判断当前是否登录，如果未登录则跳转到登录界面，如果登录则下载用户信息
    if (! [userInfo isLoginWithUserId]) {
        
        //创建登录导航控制器
        LoginViewController *loginView = [self.storyboard instantiateViewControllerWithIdentifier:@"LoginViewController"];;
        //设置返回按钮点击后返回的界面的类名，（返回首页传“MainPage”）
        loginView.backToClassName = @"MainPage";
        //设置登录成功时返回的界面的类名，（如果遍历self.navigationController.viewControllers没有对应的类，跳到个人中心）
        loginView.goToClassName = @"OrderPageTableViewController";
        
        [self.navigationController pushViewController:loginView animated:YES];
        
    } else {
    
    //添加下拉刷新
    MJRefreshNormalHeader *header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        
        //请求数据+刷新界面
        [self refreshRecordData:NO];
        
        //关闭刷新
        [self.tableView.mj_header endRefreshing];
    }];
    header.stateLabel.font = [UIFont systemFontOfSize:12];
    header.lastUpdatedTimeLabel.font = [UIFont systemFontOfSize:11];
    self.tableView.mj_header = header;
    
    
    //上拉刷新
    MJRefreshAutoNormalFooter *footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{
        
        //调用刷新方法
        [self refreshRecordData:YES];
        
        //关闭刷新
        [self.tableView.mj_footer endRefreshing];
    }];
    footer.automaticallyHidden = YES;//自动根据有无数据来显示和隐藏
    footer.stateLabel.font = [UIFont systemFontOfSize:12];
    
    self.tableView.mj_footer = footer;
    
  
    
    }
    
    
}

-(void)viewWillAppear:(BOOL)animated{

    [super viewWillAppear:animated];
    
    // 设置头视图
    [self setHeaderView];
    
    //请求数据+刷新界面
    [self refreshRecordData:NO];
    
}

-(void)viewDidDisappear:(BOOL)animated{
    
    [super viewDidDisappear:animated];
    
    //停止风火轮
    [smallFunc stopActivityIndicator:@"OrderPageTableViewController"];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - 私有方法
//请求并刷新数据
- (void)refreshRecordData:(BOOL)isFooterRefresh {
    
    dispatch_async(dispatch_get_main_queue(), ^{
        //显示风火轮
        [smallFunc createActivityIndicator:self.view AndKey:@"OrderPageTableViewController"];
    });
    
    if (! isFooterRefresh) { //是下拉刷新
        //下拉刷新或者点击分类刷新，都需要将分页数重新设置为1
        pageNum = 1;
        
        // 清空本地数据
        
       
    } else { //是上拉刷新
        //为上拉刷新，需要使用累加的分页值
        pageNum++;
    }
    
    NSString *Action=@"个人";
    if ([userInfo.RoleType isEqualToString:@"0"]) {
        Action=@"个人";
    }else if ([userInfo.RoleType isEqualToString:@"10"]) {
        Action=@"商户";
    }else if ([userInfo.RoleType isEqualToString:@"20"]) {
        Action=@"服务商";
    }else if ([userInfo.RoleType isEqualToString:@"30"]) {
        Action=@"区代";
    }else if ([userInfo.RoleType isEqualToString:@"40"]) {
        Action=@"省代";
    }
    
    // 添加接口，判断10/20
    
    //分页数
    NSString *paraPageNum = [NSString stringWithFormat:@"%ld",(long)pageNum];
    
    NSString *method = [NSString stringWithFormat:@"GetPageUserConsumption"];
    NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:
                         Action,@"Action",                  //获取类型（个人、商户、默认）
                         userInfo.UserId,@"UserId",         //用户编号
                         perFlag,@"Commission",             //分类：10、20、0
                         paraPageNum,@"PageIndex",
                         @"10",@"PageSize",
                         nil];
    
    [SOAPUrlSession SOAPDataWithMethod:method parameter:dic success:^(id responseObject) {
        
        NSDictionary *responseDic = responseObject;
        NSLog(@"GetPageUser %@ ----- %@",responseDic[@"Code"],responseDic[@"Message"]);
        
        //返回的Code字段：200-成功，300-失败，400-无数据，500-内部服务异常
        NSString *responseCode = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
        
        if ([responseCode isEqualToString:@"200"]) {
            
            // 获取累计消费
            totalText = [NSString stringWithFormat:@"%@", responseObject[@"Data"][@"saletotal"]];
            
            //后台返回“发送成功”
            NSArray *dataArray = responseObject[@"Data"][@"rows"];
            if (dataArray.count > 0) {
                
                //存储接口返回数据
                NSMutableArray *acquireArray = [NSMutableArray array];
                
                //将数据保存到数据源
                for (NSDictionary *dic in dataArray) {
                    
                    //创建数据
                     ExpenseRecord *rechargeRecord = [[ExpenseRecord alloc] initWithoperatevalue:dic[@"operatevalue"] createdate:dic[@"createdate"] headicon:dic[@"headicon"] nickname:dic[@"nickname"] realname:dic[@"realname"] commission:dic[@"commission"] paymentmark:dic[@"paymentmark"]];
                    [acquireArray addObject:rechargeRecord];
                    
                }
                //初始化本地数据，（0-夺宝中，对应的商品列表）
                [rechargeRecordList removeAllObjects];
                rechargeRecordList = [acquireArray mutableCopy];
            } else {
                //展示无夺宝记录的404页面
                [rechargeRecordList removeAllObjects];
                NSLog(@"当前用户无订单记录");
            }
            
            if (rechargeRecordList.count > 0) {
                //数据更新过后，才调用刷新方法
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    //停止风火轮
                    [smallFunc stopActivityIndicator:@"OrderPageTableViewController"];
                    
                    //去掉无数据时的视图
                    if (noDataView) {
                        [noDataView removeFromSuperview];
                        noDataView = nil;
                    }
                    
                    //更新数据源
                    if (! isFooterRefresh) { //是下拉刷新
                        [showRecordArray removeAllObjects];
                        showRecordArray = [rechargeRecordList mutableCopy];
                    } else { //是上拉刷新
                        NSArray *resultArr = [rechargeRecordList copy];
                        [showRecordArray addObjectsFromArray:resultArr];
                    }
                    
                    // 更新UI
                    totalLabel.text = [SmallFunctionTool changeBigNumber:totalText];    // 累计消费
                    [self.tableView reloadData];    // 单元格
                    
                });
            } else {
                //数据更新过后，才调用刷新方法
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    //停止风火轮
                    [smallFunc stopActivityIndicator:@"OrderPageTableViewController"];
                    
                    //更新数据源
                    if (! isFooterRefresh) { //是下拉刷新
                        [showRecordArray removeAllObjects];
                        showRecordArray = [rechargeRecordList mutableCopy];
                    } else { //是上拉刷新
                        NSArray *resultArr = [rechargeRecordList copy];
                        [showRecordArray addObjectsFromArray:resultArr];
                    }
                    
                    // 更新UI
                    totalLabel.text = [SmallFunctionTool changeBigNumber:totalText];    // 累计消费
                    [self.tableView reloadData];    // 单元格
                    
                });
            }
            
            
        }else if ([responseCode isEqualToString:@"400"]){
            
            dispatch_async(dispatch_get_main_queue(), ^{
                //停止风火轮
                [smallFunc stopActivityIndicator:@"OrderPageTableViewController"];
                [rechargeRecordList removeAllObjects];
                [self.tableView reloadData];
            });
            
            if (showRecordArray.count> 0) {
                //数据更新过后，才调用刷新方法
                dispatch_async(dispatch_get_main_queue(), ^{
                    
                    //去掉无数据时的视图
                    if (noDataView) {
                        [noDataView removeFromSuperview];
                        noDataView = nil;
                    }
                    
                    FadeAlertView *showMessage = [[FadeAlertView alloc] init];
                    [showMessage showAlertWithTwo:@"没有更多订单数据啦亲！"];
                    
                    return ;
                    
                });
            }else {
                if (! noDataView) {
                    //显示无商品时的图片
                    dispatch_async(dispatch_get_main_queue(), ^{
                        noDataView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)];
                        noDataView.backgroundColor = [UIColor colorWithRed:245.0/255.0f green:245.0/255.0f blue:245.0/255.0f alpha:1.0f];
                        
                        //图标
                        UIImageView *noDataImage = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"暂无订单数据"]];
                        // CGRect imageFrame =CGRectMake(0, (SCREEN_HEIGHT-SCREEN_WIDTH)/2-20, SCREEN_WIDTH, (SCREEN_WIDTH)*(276.0/750.0));
                        noDataImage.center = CGPointMake(SCREEN_WIDTH/2.0, SCREEN_HEIGHT/2.0 - 150);
                        [noDataView addSubview:noDataImage];
                        [self.view addSubview:noDataView];
                    });
                }
            }
            
        } else {
            
            dispatch_async(dispatch_get_main_queue(), ^{
                //停止风火轮
                [smallFunc stopActivityIndicator:@"OrderPageTableViewController"];
            });
            
        }
    } failure:^(NSError *error) {
        dispatch_async(dispatch_get_main_queue(), ^{
            //停止风火轮
            [smallFunc stopActivityIndicator:@"OrderPageTableViewController"];
        });
        //后台连接直接不成功，弹出“连接服务器失败”
        NSLog(@"网络异常：连接服务器失败");
        
    }];
    
}

#pragma mark - Table view data source
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    if (showRecordArray.count <= 0 || showRecordArray == nil) {
        return 0;
    } else {
        return showRecordArray.count;
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {

    return 120;

}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    
    
    return headerView;

}

#pragma mark - 头视图，全局
- (void)setHeaderView {

    headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 120)];
    
    UIImageView *imageView = [[UIImageView alloc] initWithFrame:headerView.bounds];
    imageView.image = [UIImage imageNamed:@"账户流水收益image"];
    [headerView addSubview:imageView];
    
    // 累计消费
    UILabel *title = [[UILabel alloc] initWithFrame:CGRectMake(0, 15, SCREEN_WIDTH, 20)];
    title.text = @"累计消费";
    title.textAlignment = NSTextAlignmentCenter;
    [headerView addSubview:title];
    
    totalLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 40, SCREEN_WIDTH, 25)];
    totalLabel.textAlignment = NSTextAlignmentCenter;
    totalLabel.textColor = Publie_Color;
    totalLabel.text = [SmallFunctionTool changeBigNumber:totalText];
    totalLabel.font = [UIFont systemFontOfSize:25];
    [headerView addSubview:totalLabel];
    
    // 12%
    per12Button = [UIButton buttonWithType:UIButtonTypeCustom];
    per12Button.frame = CGRectMake(0, 75, SCREEN_WIDTH/2, 20);
    [per12Button setTitle:@"10%消费" forState:UIControlStateNormal];
    [per12Button addTarget:self action:@selector(changeTotalButtonAction:) forControlEvents:UIControlEventTouchUpInside];
    [headerView addSubview:per12Button];
    
    // 24%
    per24Button = [UIButton buttonWithType:UIButtonTypeCustom];
    per24Button.frame = CGRectMake(SCREEN_WIDTH/2, 75, SCREEN_WIDTH/2, 20);
    [per24Button setTitle:@"20%消费" forState:UIControlStateNormal];
    [per24Button addTarget:self action:@selector(changeTotalButtonAction:) forControlEvents:UIControlEventTouchUpInside];
    [headerView addSubview:per24Button];
    
    // 按钮的颜色
    if ([perFlag isEqualToString:@"10"]) {
        [per12Button setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
        [per24Button setTitleColor:Label_Color_B forState:UIControlStateNormal];
    } else {
        [per12Button setTitleColor:Label_Color_B forState:UIControlStateNormal];
        [per24Button setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
    }

}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"MyAgent" forIndexPath:indexPath];
    

    ExpenseRecord *oneRecord = showRecordArray[indexPath.row];
    
    UIImageView *headicon = (UIImageView *)[cell viewWithTag:1000];
    UILabel *labelNickname = (UILabel *)[cell viewWithTag:1001];
    UILabel *labelCreatedate = (UILabel *)[cell viewWithTag:1002];
    UILabel *labelOperatevalue = (UILabel *)[cell viewWithTag:1003];
    UILabel *labeldakuan = (UILabel *)[cell viewWithTag:1009];
    
    if([oneRecord.headicon isEqualToString:@""]||oneRecord.headicon==nil){
        headicon.image=[UIImage imageNamed:@"defaultHead"];
    }else{
        //设置网络url图片
        NSString *urlStr = [NSString stringWithFormat:@"%@%@",Java_Image_URL,oneRecord.headicon];
        NSURL *imageUrl = [NSURL URLWithString:urlStr];
        [headicon sd_setImageWithURL:imageUrl placeholderImage:[UIImage imageNamed:@"defaultHead"] options:SDWebImageRetryFailed];
    }
    
    //给真实姓名加密
//    NSString *string1 = [oneRecord.realname substringWithRange:NSMakeRange(oneRecord.realname.length-1,1)];
//    NSString *string2 = @"";
//    for (NSInteger i=1; i<oneRecord.realname.length; i++) {
//        string2 = [NSString stringWithFormat:@"%@*",string2];
//    }
//    labelUserName.text = [NSString stringWithFormat:@"%@%@",string2,string1];
    
    
    labelCreatedate.text = oneRecord.createdate;
    
    
//    NSString *str2=[NSString stringWithFormat:@"+%@(让%@%%)",[SmallFunctionTool changeBigNumber:oneRecord.operatevalue],oneRecord.commission];
//    NSString *str2=[NSString stringWithFormat:@"+%@",[SmallFunctionTool changeBigNumber:oneRecord.operatevalue]];
//    NSString *str =[NSString stringWithFormat:@"%@",oneRecord.commission];
//    NSString *str1 =[NSString stringWithFormat:@"+%@",[SmallFunctionTool changeBigNumber:oneRecord.operatevalue]];
//    NSMutableAttributedString *aStr = [[NSMutableAttributedString alloc]initWithString:str2];
//    [aStr addAttribute:NSForegroundColorAttributeName value:[UIColor colorWithRed:255/255.0 green:11.0/255.0 blue:35.0/255.0 alpha:1.0f] range:NSMakeRange(str1.length,str.length+4)];
//    //金额
//    [labelOperatevalue setText:str];
//    [labelOperatevalue setAttributedText:aStr];
    
    labelOperatevalue.text = [SmallFunctionTool changeBigNumber:oneRecord.operatevalue];
    //金额显示万
   // labelOperatevalue.text =[NSString stringWithFormat:@"+%@",[SmallFunctionTool changeBigNumber:oneRecord.operatevalue]];
    
    if ([oneRecord.nickname isEqualToString:@""]||oneRecord.nickname==nil) {//真实姓名
        labelNickname.text = [NSString stringWithFormat:@"%@",oneRecord.realname];
    }else{//昵称
        labelNickname.text =oneRecord.nickname;
    }
    
    
    if ([oneRecord.paymentmark isEqualToString:@"0"]||[oneRecord.paymentmark isEqualToString:@"1"]) {
        labeldakuan.text=@"未打款";
        labeldakuan.textColor = Publie_Color;
        
    }else if ([oneRecord.paymentmark isEqualToString:@"3"]){
        
        labeldakuan.text=@"已打款";
        labeldakuan.textColor = CRGB(93, 183, 137, 1);
        
    }
    
    
    return cell;
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}

//tableview的下边线顶格
-(void)viewDidLayoutSubviews
{
    if ([self.tableView respondsToSelector:@selector(setSeparatorInset:)]) {
        [self.tableView setSeparatorInset:UIEdgeInsetsMake(0,0,0,0)];
    }
    
    if ([self.tableView respondsToSelector:@selector(setLayoutMargins:)]) {
        [self.tableView setLayoutMargins:UIEdgeInsetsMake(0,0,0,0)];
    }
}
-(void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) {
        [cell setSeparatorInset:UIEdgeInsetsZero];
    }
    
    if ([cell respondsToSelector:@selector(setLayoutMargins:)]) {
        [cell setLayoutMargins:UIEdgeInsetsZero];
    }
}

#pragma mark - 12、24消费按钮
- (void)changeTotalButtonAction:(UIButton *)button {

    if ([button isEqual:per12Button]) {
        
        perFlag = @"10";
        
        [per12Button setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
        [per24Button setTitleColor:Label_Color_B forState:UIControlStateNormal];
        
    } else {
       
        perFlag = @"20";
        
        [per12Button setTitleColor:Label_Color_B forState:UIControlStateNormal];
        [per24Button setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
    }

    // 刷新显示数据
    [self refreshRecordData:NO];
    
}


#pragma mark - 获取头视图的数据(已经废弃)
- (void)getHeadeViewData {

    // 获取数据首页的数据12、24
    NSString *method = [NSString stringWithFormat:@"GetIndexStatistics"];
    
    [SOAPUrlSession SOAPDataWithMethod:method parameter:nil success:^(id responseObject) {
        
        //-------------------------------更新数据源-------------------------------
        NSDictionary *responseDic = responseObject;
        NSLog(@"GetIndexStatistics%@ ----- %@",responseDic[@"Code"],responseDic[@"Message"]);
        
        //返回的Code字段：200-成功，300-失败，400-无数据，500-内部服务异常
        NSString *responseCode = [NSString stringWithFormat:@"%@",responseObject[@"Code"]];
        
        if ([responseCode isEqualToString:@"200"]) {
            //操作成功，接口封装返回的数据对象
//            NSDictionary *dataDic = responseObject[@"Data"];
            
            
        } else {
            //根据后端定义的错误编码，返回不同的提示
            NSLog(@"获取消费信息失败");
        }
        
    } failure:^(NSError *error) {
        //后台连接直接不成功，弹出“连接服务器失败”
        NSLog(@"网络异常：连接服务器失败");
    }];

}




@end
