//
//  FriendsListViewController.m
//  好友列表
//
//  Created by CYC on 2017/4/27.
//  Copyright © 2017年 CYC. All rights reserved.
//

// 我的圈子，也就是好友列表

#import "FriendsListViewController.h"
#import "GroupHeaderCell.h"
#import "GroupListTableViewCell.h"
#import "ZGFriendModel.h"

#define GroupHeaderCellID @"GroupHeaderCell"
#define GroupListTableViewCellID @"GroupListTableViewCell"

#define GroupHeaderCellHeight 80            // 组头的高度
#define GroupListTableViewCellHeight 60     // 单元格的高度

@interface FriendsListViewController () <UITableViewDelegate, UITableViewDataSource> {

    
    UITableView *_groupTableView;
    
    //用户信息单例
    UserInformation *userInfo;
    
    //工具方法单例
    SmallFunctionTool *smallFunc;
    NSMutableArray *dataList;
    
    
    // 分组的开关
    //BOOL _groupSwitch;  // 这个属性应该封装在model中

}

@end

@implementation FriendsListViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    //初始化
    userInfo = [UserInformation sharedInstance];
    smallFunc = [SmallFunctionTool sharedInstance];
    dataList = [NSMutableArray array];
    
    // 标题
    self.navigationItem.title = @"分销团队";
    
    // 列表
    _groupTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, kScreenHeight)
                                                   style:UITableViewStylePlain];
    _groupTableView.tableFooterView = [[UIView alloc] initWithFrame:CGRectZero];    // 去除表视图底部多余的线条
    _groupTableView.sectionHeaderHeight = GroupHeaderCellHeight;                    // 头高度
    _groupTableView.rowHeight = GroupListTableViewCellHeight;                       // 单元格高度
    _groupTableView.delegate = self;
    _groupTableView.dataSource = self;
    [self.view addSubview:_groupTableView];
    
//    [_groupTableView registerNib:[UINib nibWithNibName:@"GroupHeaderCell" bundle:[NSBundle mainBundle]] forHeaderFooterViewReuseIdentifier:GroupHeaderCellID];          // 注册头视图
    [_groupTableView registerNib:[UINib nibWithNibName:@"GroupListTableViewCell" bundle:[NSBundle mainBundle]] forCellReuseIdentifier:GroupListTableViewCellID];   // 注册单元格
    
    
    
    
}

- (void)viewWillAppear:(BOOL)animated {

    [super viewWillAppear:animated];
    
    [self loadNetData];

}

- (void)viewWillDisappear:(BOOL)animated {
    
    [super viewWillDisappear:animated];
    
    //停止风火轮
    [smallFunc stopActivityIndicator:@"FriendsListViewController"];
    
    
}

#pragma mark - 加载数据
- (void)loadNetData {
    
    //显示风火轮
    [smallFunc createActivityIndicator:self.view AndKey:@"FriendsListViewController"];
    
    [dataList removeAllObjects];

    //请求Java
    NSDictionary *dic = @{@"phone" : userInfo.phone};
    [SOAPUrlSession AFHTTPSessionManager:@"userLogin/getRecom" parameter:dic success:^(id responseObject) {
        
        
        NSArray *list = responseObject[@"list"];
        for (NSDictionary *dic in list) {
            
            ZGFriendModel *mdoel = [[ZGFriendModel alloc] init];
            mdoel.nickname = [NSString stringWithFormat:@"%@", dic[@"nickname"]];
            mdoel.headURL = [NSString stringWithFormat:@"%@", dic[@"headURL"]];
            mdoel.phone = [NSString stringWithFormat:@"%@", dic[@"phone"]];
            
            [dataList addObject:mdoel];
            
        }
        
        //主线程更新视图
        dispatch_async(dispatch_get_main_queue(), ^{
            
            [_groupTableView reloadData];
            
            //停止风火轮
            [smallFunc stopActivityIndicator:@"FriendsListViewController"];
            
        });
        
        
    } failure:^(NSError *error) {
        //后台连接直接不成功，弹出“连接服务器失败”
        FadeAlertView *showMessage = [[FadeAlertView alloc] init];
        [showMessage showAlertWith:@"网络异常：连接服务器失败"];
        
        //停止风火轮
        [smallFunc stopActivityIndicator:@"FriendsListViewController"];
    }];

}



#pragma mark - 表视图代理方法
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    
    return 1;

}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {

    // 根据Model中的开关标签来控制分组是否打开
//    if (section == 0) {
//        if (_groupSwitch) {
//            return 5;
//        } else {
//            return 0;
//        }
//    }
    
    return dataList.count;

}

//- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
//
//    GroupHeaderCell *cell = [tableView dequeueReusableHeaderFooterViewWithIdentifier:GroupHeaderCellID];
//    
//    // 根据展开状态，旋转指示图
//    if (_groupSwitch) {
//        [UIView animateWithDuration:.35
//                         animations:^{
//                             cell.tipImageView.transform = CGAffineTransformMakeRotation(M_PI_2);
//                         }];
//    }
//
//    // 由于没有组头的点击事件，所以添加按钮响应
//    UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
//    button.frame = CGRectMake(0, 0, kScreenWidth, 80);
//    button.tag = section + 300;   // 标志
//    [button addTarget:self action:@selector(clickHeaderButtonAction:) forControlEvents:UIControlEventTouchUpInside];
//    [cell.contentView addSubview:button];
//    
//    
//    return cell;
//
//}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {

    GroupListTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:GroupListTableViewCellID];
    
    // 如果是最后一个单元格，那么分割线占满(上左下右)
    cell.separatorInset = UIEdgeInsetsMake(0, 20, 0, 0);
    
    if (dataList.count == 0) {
        return cell;
    }
    
    
    ZGFriendModel *model = dataList[indexPath.row];
    
    // 图片
    NSString *path = [NSString stringWithFormat:@"%@%@", Java_Image_URL, model.headURL];
    [cell.headImageView sd_setImageWithURL:[NSURL URLWithString:path]
                          placeholderImage:[UIImage imageNamed:@"defaultHead"]
                                   options:SDWebImageRetryFailed];
    
    // 昵称
    cell.groupNameLabel.text = model.nickname;
    
    // 电话号码
    cell.stepLabel.text = model.phone;
    
    return cell;

}

// 点击了分组，展开分组
//- (void)clickHeaderButtonAction:(UIButton *)button {
//
//    NSInteger section = button.tag - 300;
//    _groupSwitch = !_groupSwitch;
//    
//    // 设置分组的单元格为0，收起效果
//    [_groupTableView reloadSections:[NSIndexSet indexSetWithIndex:section] withRowAnimation:UITableViewRowAnimationAutomatic];
//    NSIndexPath *indexPath = [NSIndexPath indexPathForItem:0 inSection:section];
//    if(_groupSwitch){
//        [_groupTableView scrollToRowAtIndexPath:indexPath atScrollPosition:UITableViewScrollPositionMiddle animated:YES];
//    }
//
//}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {

    
    
}

































@end
